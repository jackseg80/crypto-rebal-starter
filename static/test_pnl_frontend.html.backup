<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <title>Test P&L Frontend</title>
    <script type="module" src="static/modules/http.js"></script>
    <script src="static/global-config.js"></script>
    <style>
        body {
            font-family: system-ui;
            padding: 20px;
        }

        .success {
            color: green;
        }

        .error {
            color: red;
        }

        .info {
            color: blue;
        }
    </style>
</head>

<body>
    <h1>Test P&L Frontend Integration</h1>

    <div id="status">Initialisation...</div>
    <div id="results"></div>

    <script type="module">
        import { safeFetch } from './static/modules/http.js';

        const API_BASE = (window.globalConfig && window.globalConfig.get('api_base_url')) || 'http://localhost:8000';

        async function testPnlIntegration() {
            const statusEl = document.getElementById('status');
            const resultsEl = document.getElementById('results');

            try {
                statusEl.innerHTML = '<span class="info">üîç Test de l\'API P&L...</span>';

                // Test 1: Appel simple
                const { ok, data, status, notModified } = await safeFetch(`${API_BASE}/api/performance/summary`);

                if (!ok) {
                    statusEl.innerHTML = `<span class="error">‚ùå Erreur HTTP ${status}</span>`;
                    return;
                }

                if (notModified) {
                    statusEl.innerHTML = '<span class="info">‚úÖ Cache ETag fonctionne (304 Not Modified)</span>';
                } else {
                    statusEl.innerHTML = '<span class="success">‚úÖ API P&L accessible</span>';
                }

                // Test 2: Affichage des donn√©es
                const perf = data?.performance;
                if (perf) {
                    resultsEl.innerHTML = `
                        <h3>üìä Donn√©es P&L Today</h3>
                        <p><strong>Date:</strong> ${perf.as_of}</p>
                        <p><strong>Total:</strong> ${perf.total.current_value_usd.toLocaleString('fr-CH', { style: 'currency', currency: 'USD' })}</p>
                        <p><strong>P&L Today:</strong> <span style="color: ${perf.total.absolute_change_usd >= 0 ? 'green' : 'red'}">${perf.total.absolute_change_usd.toLocaleString('fr-CH', { style: 'currency', currency: 'USD' })}</span></p>
                        
                        <h4>Par compte:</h4>
                        <ul>
                            ${Object.entries(perf.by_account).map(([account, data]) => `
                                <li>${account}: ${data.absolute_change_usd.toLocaleString('fr-CH', { style: 'currency', currency: 'USD' })}</li>
                            `).join('')}
                        </ul>
                        
                        <h4>Par source:</h4>
                        <ul>
                            ${Object.entries(perf.by_source).map(([source, data]) => `
                                <li>${source}: ${data.absolute_change_usd.toLocaleString('fr-CH', { style: 'currency', currency: 'USD' })}</li>
                            `).join('')}
                        </ul>
                    `;
                }

                // Test 3: Test du cache ETag
                statusEl.innerHTML += '<br><span class="info">üîç Test du cache ETag...</span>';

                const secondCall = await safeFetch(`${API_BASE}/api/performance/summary`);
                if (secondCall.notModified) {
                    statusEl.innerHTML += '<br><span class="success">‚úÖ Cache ETag fonctionne correctement</span>';
                } else {
                    statusEl.innerHTML += '<br><span class="info">‚ÑπÔ∏è Donn√©es mises √† jour (nouvel ETag)</span>';
                }

            } catch (error) {
                statusEl.innerHTML = `<span class="error">‚ùå Erreur: ${error.message}</span>`;
                console.error('Test error:', error);
            }
        }

        // Lancer le test
        document.addEventListener('DOMContentLoaded', testPnlIntegration);
    </script>
</body>

</html>