# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [3.0.0] - 2025-09-17

### üöÄ Major Features - Syst√®me d'Allocation Dynamique

#### √âlimination des Presets Hardcod√©s
- **BREAKING**: Suppression compl√®te des presets fig√©s (BTC 40%, ETH 30%, Stables 20/30/50%)
- **NEW**: Calculs d'allocation contextuels bas√©s sur cycle de march√©, r√©gime, et concentration wallet
- **NEW**: Source canonique unique `u.targets_by_group` pour coh√©rence parfaite Analytics ‚Üî Rebalance
- **NEW**: Fonction `computeMacroTargetsDynamic()` avec modulateurs intelligents

#### Synchronisation Analytics ‚Üî Rebalance
- **FIXED**: "Allocation Sugg√©r√©e (Unified)" maintenant peupl√©e automatiquement dans rebalance.html
- **NEW**: Sauvegarde automatique des donn√©es unified avec nouveau format v2
- **CRITICAL**: Correction `targetsSource = data.targets` vs `data.execution_plan`
- **NEW**: Support r√©trocompatible ancien + nouveau format localStorage

### üîß Technical Changes

#### Core Engine (`static/core/unified-insights-v2.js`)
- **ADD**: `computeMacroTargetsDynamic(ctx, rb, walletStats)` - remplace presets
- **CHANGE**: Construction `targets_by_group` via calculs vs templates statiques
- **ADD**: Modulateurs bull/bear/hedge + diversification selon concentration wallet
- **ADD**: Garde-fous coh√©rence stables = risk_budget.target_stables_pct (source de v√©rit√©)

#### UI Components (`static/components/UnifiedInsights.js`)
- **REMOVE**: Logique preset hardcod√©e (elimination compl√®te lignes 680-725)
- **CHANGE**: Lecture directe `u.targets_by_group` vs `buildTheoreticalTargets()`
- **REMOVE**: Import `buildTheoreticalTargets` (function deprecated)
- **ADD**: Logs debug pour validation donn√©es dynamiques

#### Pages HTML
- **Analytics** (`static/analytics-unified.html`):
  - **ADD**: `saveUnifiedDataForRebalance()` - sauvegarde automatique
  - **ADD**: Format donn√©es v2 avec source `analytics_unified_v2`
- **Rebalance** (`static/rebalance.html`):
  - **FIXED**: `syncUnifiedSuggestedTargets()` support sources v2
  - **ADD**: Protection taxonomie `forceReloadTaxonomy()`
  - **ADD**: Logs debug d√©taill√©s structure donn√©es

### üêõ Critical Bug Fixes

#### Allocation Display Issues
- **FIXED**: "Others 31%" incoh√©rent ‚Üí allocations coh√©rentes via source unique
- **FIXED**: Inconsistance Objectifs Th√©oriques vs Plan d'Ex√©cution ‚Üí m√™me source
- **FIXED**: rebalance.html "Allocation Sugg√©r√©e (Unified)" vide ‚Üí peupl√©e automatiquement
- **FIXED**: Affichage `estimated_iters: 2.0%` au lieu allocations r√©elles

#### Data Synchronization
- **FIXED**: Analytics et Rebalance utilisaient sources diff√©rentes ‚Üí u.targets_by_group unique
- **FIXED**: Presets ignoraient risk_budget.target_stables_pct ‚Üí int√©gration native
- **FIXED**: Taxonomie non charg√©e causant "Others" gonfl√© ‚Üí forceReloadTaxonomy()

### üìö Documentation
- **NEW**: `docs/dynamic-allocation-system.md` - guide complet nouveau syst√®me
- **UPDATE**: `README.md` - section "Nouvelles Fonctionnalit√©s v3.0"
- **NEW**: Commentaires d√©taill√©s code + logs explicites

### üíî Breaking Changes
- **REMOVE**: Presets hardcod√©s dans tous les fichiers
- **REMOVE**: `buildTheoreticalTargets()` calls (replaced by dynamic computation)
- **CHANGE**: Allocations maintenant contextuelles vs statiques (am√©lioration UX)

**Migration**: R√©trocompatibilit√© assur√©e, aucune action utilisateur requise.

---

## [2.2.0] - 2025-01-14

### üéØ Centralisation ML - Source Unique de V√©rit√©

### Added
- **Source ML Centralis√©e** : `shared-ml-functions.js::getUnifiedMLStatus()` - single source of truth
- **Logique Prioritaire Unifi√©e** : Governance Engine ‚Üí ML Status API ‚Üí Stable fallback (identique AI Dashboard)
- **Cache Intelligent** : TTL 2 minutes pour performance avec invalidation automatique
- **Validation Robuste** : Caps automatiques (4 mod√®les max, 100% confidence max) pour √©viter valeurs aberrantes
- **Documentation Compl√®te** : `docs/ml-centralization.md` avec architecture d√©taill√©e

### Fixed
- **‚ùå Calculs ML Erron√©s** : Fini les "8/4 mod√®les = 200% confidence" - d√©sormais cap√© √† 4/4 = 100%
- **‚ùå Badge Global Manquant** : Erreur syntaxe WealthContextBar.js (else if apr√®s else) corrig√©e
- **‚ùå Intelligence ML Vide** : Analytics-unified affichait "--" au lieu des donn√©es r√©elles
- **‚ùå Logique Dupliqu√©e** : 3 impl√©mentations diff√©rentes (badge, analytics, ai-dashboard) unifi√©es
- **‚ùå Timezone Incorrect** : Badge utilise d√©sormais Europe/Zurich via `formatZurich()`

### Changed
- **WealthContextBar** : Utilise source ML centralis√©e au lieu de logique dupliqu√©e
- **Analytics-unified** : Intelligence ML tab utilise `getUnifiedMLStatus()` avec fallback
- **AI Dashboard** : Migration vers source centralis√©e tout en conservant m√™me logique
- **Configuration API Safe** : `globalConfig` access s√©curis√© pour √©viter erreurs d'import

### Technical
- **Architecture** : Un seul module g√®re toute la logique ML pour 3 pages
- **Performance** : Cache 2min TTL √©vite appels API r√©p√©t√©s
- **Maintenance** : Plus qu'un seul endroit √† modifier pour la logique ML
- **Coh√©rence** : Calculs identiques partout, fini les divergences

## [2.1.0] - 2024-01-15

### üß≠ Consolidation Navigation & WealthContextBar Cross-Asset

### Added
- **Navigation Canonique** : 6 pages principales - Portfolio, Analytics, Risk, Rebalance, Execution, Settings
- **WealthContextBar Global** : Filtres household/account/module/currency persistants avec sync localStorage+querystring
- **Deep Links System** : Ancres fonctionnelles avec scroll automatique et highlight temporaire (2s)
- **RBAC Admin Dropdown** : Menu visible uniquement pour governance_admin/ml_admin avec ML Command Center, Tools & Debug, Archive
- **Legacy Redirections** : Syst√®me de redirections douces vers ancres canoniques pour √©viter 404s
- **Badges Standards** : Format uniforme "Source ‚Ä¢ Updated HH:MM:SS ‚Ä¢ Contrad XX% ‚Ä¢ Cap YY% ‚Ä¢ Overrides N" (timezone Europe/Zurich)

### Changed
- **Menu Navigation** : Simplifi√© de 10+ entr√©es vers 6 pages canoniques avec sous-menus via ancres
- **Archive System** : Pages legacy conserv√©es mais accessibles via Admin > Archive uniquement
- **Cross-Asset Filtering** : WealthContextBar applique filtrage sur pages Rebalance/Execution
- **Documentation** : Restructuration compl√®te avec 7 nouveaux docs (navigation, wealth-modules, governance, runbooks, etc.)

### Technical
- **Components** : `WealthContextBar.js`, `deep-links.js`, `Badges.js`, `legacy-redirects.js`
- **Archive Index** : `static/archive/index.html` avec liens legacy ‚Üí canonical
- **RBAC Integration** : V√©rification r√¥les localStorage/window.userRoles dans nav.js
- **Event System** : √âv√©nement `wealth:change` pour synchronisation cross-composants

### Documentation
- **Navigation & Architecture** : `docs/navigation.md` - Structure menus et liens profonds
- **Modules Patrimoniaux** : `docs/wealth-modules.md` - Crypto/Bourse/Banque/Divers
- **Governance & Caps** : `docs/governance.md` - Hi√©rarchie SMART‚ÜíDecision Engine
- **Runbooks** : `docs/runbooks.md` - Proc√©dures incidents (stale/error, VaR>4%, contradiction>55%)
- **T√©l√©m√©trie** : `docs/telemetry.md` - KPIs syst√®me et m√©triques Prometheus

---

## [2.0.1] - 2024-01-15

### üéØ Dashboard Global Insight Enhancement

### Added
- **Global Insight Badge**: Dashboard principal affiche maintenant "Updated: HH:MM:SS ‚Ä¢ Contrad: X% ‚Ä¢ Cap: Y%" en bas de la tuile
- **Real-time Governance Data**: Badge se met √† jour automatiquement avec les donn√©es du Decision Engine
- **Cross-dashboard Consistency**: Format coh√©rent avec les autres dashboards (Analytics, Risk)
- **Store Integration**: Synchronisation via `risk-dashboard-store.js` pour donn√©es temps r√©el

### Changed
- **Badge Position**: D√©plac√© de haut vers bas de la tuile Global Insight pour coh√©rence visuelle
- **Data Flow**: Badge r√©cup√®re timestamp des signaux ML et donn√©es policy du store governance
- **Update Triggers**: Badge se rafra√Æchit lors des changements store et √©v√©nements `configChanged`

### Technical
- **Function**: `updateGlobalInsightMeta()` pour gestion badge dans `dashboard.html`
- **Store Sync**: Utilise `store.get('governance.ml_signals')` et `store.get('governance.active_policy')`
- **Event Handling**: √âcoute changements store via subscription et √©v√©nements storage cross-tab

### Fixed
- Badge Global Insight maintenant visible et fonctionnel
- Donn√©es gouvernance affich√©es en temps r√©el sur dashboard principal
- Coh√©rence visuelle avec format badges des autres dashboards

---

## [2.0.0] - 2024-12-12

### üîÑ Major API Refactoring & Security Improvements

This release contains **BREAKING CHANGES** requiring consumer updates.

### Added
- **Unified Endpoints**: Single approval endpoint `/api/governance/approve/{resource_id}` for both decisions and plans
- **Centralized Alerts**: All alert operations now under `/api/alerts/*` namespace
- **Admin Protection**: ML debug endpoints now require `X-Admin-Key` header
- **Validation Tools**: 
  - `tests/smoke_test_refactored_endpoints.py` - Endpoint validation
  - `find_broken_consumers.py` - Consumer reference scanner  
  - `verify_openapi_changes.py` - Breaking changes analyzer
- **Documentation**: `docs/refactoring.md` with complete migration guide

### Changed
- **ML Namespace**: `/api/ml-predictions/*` ‚Üí `/api/ml/*` (unified)
- **Risk Namespace**: `/api/advanced-risk/*` ‚Üí `/api/risk/advanced/*` (consolidated)
- **Governance API**: Unified approval endpoint with `resource_type` parameter
- **Alert Resolution**: Centralized under `/api/alerts/resolve/{alert_id}`
- **Alert Acknowledgment**: Centralized under `/api/alerts/acknowledge/{alert_id}`

### Removed (Security & Production Readiness)
- **Dangerous Endpoints**: 
  - `/api/realtime/publish` - Could allow arbitrary event publishing
  - `/api/realtime/broadcast` - Could spam all connected clients
- **Test Endpoints**: 
  - All `/api/test/*` endpoints - Removed from production
  - All `/api/alerts/test/*` endpoints - Removed from production
- **Duplicate Endpoints**:
  - `/api/risk/alerts/{id}/resolve` - Now `/api/alerts/resolve/{id}`
  - `/api/monitoring/alerts/{id}/resolve` - Now `/api/alerts/resolve/{id}`
  - `/api/portfolio/alerts/{id}/resolve` - Now `/api/alerts/resolve/{id}`

### Fixed
- **Pydantic v2 Compatibility**: Fixed `regex=` ‚Üí `pattern=` in Field definitions
- **Consumer References**: Updated 13 files with broken endpoint references
- **Test Suites**: Updated E2E tests to work with new architecture
- **Documentation**: Synchronized all docs with new endpoint structure

### Security
- **Endpoint Protection**: ML debug endpoints require admin authentication
- **Attack Surface Reduction**: Removed 5 potentially dangerous endpoints
- **Test Isolation**: No test endpoints exposed in production

### Migration
**Required Actions for Consumers:**
1. Replace `/api/ml-predictions/*` with `/api/ml/*`
2. Remove all `/api/test/*` and `/api/alerts/test/*` calls
3. Update `/api/advanced-risk/*` to `/api/risk/advanced/*`
4. Update `/governance/approve` calls to include `resource_type` in body
5. Centralize alert operations to `/api/alerts/*`

**Tools Available:**
- Run `python find_broken_consumers.py` to scan for broken references
- Run `python tests/smoke_test_refactored_endpoints.py` to validate endpoints
- See `docs/refactoring.md` for complete migration guide

### Performance
- **Namespace Consolidation**: Reduced API surface from 6 to 3 main namespaces
- **Endpoint Efficiency**: Unified endpoints reduce client-side complexity

---

## [1.8.0] - 2024-12-10

### Added
- Phase 3C: Hybrid Intelligence integration
- Advanced ML pipeline management
- Cross-asset correlation monitoring
- Enhanced governance workflows

### Changed
- Improved risk calculation performance
- Enhanced dashboard responsiveness
- Better error handling in ML components

### Fixed
- Memory leaks in ML pipeline
- Cache invalidation issues
- Dashboard synchronization bugs

---

## [1.7.0] - 2024-12-01

### Added
- Phase 2C: ML Alert Predictions
- Predictive alerting system
- Enhanced ML models integration
- Real-time streaming improvements

### Changed
- Optimized risk calculations
- Enhanced UI/UX across dashboards
- Improved API response times

---

## [1.6.0] - 2024-11-15

### Added
- Phase 2B: Cross-asset correlation analysis
- Advanced risk engine
- Multi-exchange support
- Enhanced monitoring

---

*Earlier versions documented in git history*

# AGENTS.md ‚Äî Guide de travail pour agents (Crypto Rebal Starter)

Ce fichier est inject√© automatiquement dans chaque prompt que Codex (ou autre agent code) re√ßoit.
Il d√©finit les conventions, r√®gles et fichiers cl√©s du projet pour que l‚Äôagent produise un travail coh√©rent, s√©curis√© et adapt√© √† l‚Äôenvironnement Windows 11.

---

## 0) R√®gles d‚Äôor

- Pas de secrets ni cl√©s dans le code g√©n√©r√©.
- Pas d‚ÄôURL en dur pour les APIs ‚Üí utiliser `static/global-config.js`.
- Pas de refactor massif : proposer uniquement des patchs/diffs minimaux, jamais des fichiers entiers.
- Ne pas renommer de fichiers sans demande explicite.
- Respect des perfs : batching, pagination, caches locaux.
- Tests obligatoires si du code backend est modifi√©.
- S√©curit√© : pas de nouveaux endpoints sensibles (`/realtime/publish`, `/broadcast`, etc.).

---

## 0bis) Environnement Windows (important)

- OS cible : Windows 11
- Shell : PowerShell (pas Bash)
- Environnement Python :
  ```powershell
  .\.venv\Scripts\Activate.ps1
  ```
- Versions minimales : Python >= 3.11, FastAPI >= 0.110, Pydantic >= 2.5

### Commandes utiles (PowerShell)

```powershell
# Lancer l‚ÄôAPI
uvicorn api.main:app --reload --port 8000

# Acc√®s front
http://localhost:8000/static/analytics-unified.html
http://localhost:8000/static/risk-dashboard.html

# Lancer les tests rapides
python -m pytest -q tests/unit
python -m pytest -q tests/integration
python tests\smoke_test_refactored_endpoints.py

# Cr√©er une archive du projet
Compress-Archive -Path .\* -DestinationPath .\crypto-rebal-starter.zip -Force -Exclude .venv,**\__pycache__\,**\.ruff_cache\,**\*.tmp
```

### Wealth / Saxo
- Module Saxo = WIP (non bloquant).
- Ne pas lier √† la navigation prod, limiter aux tests cibl√©s.

---

## 1) Stack technique

- Backend : FastAPI + Pydantic v2, orchestrateur ML en Python.
- Frontend : HTML statiques (`static/*.html`), JS ESM modules, Chart.js.
- ML : PyTorch, mod√®les stock√©s dans `services/ml`.
- Tests : Pytest, smoke tests PowerShell.
- Infra : Docker, Postgres, Redis (caching).

---

## 2) Fichiers cl√©s

- `api/main.py` ‚Äî routes FastAPI
- `services/ml/*` ‚Äî mod√®les ML, orchestrateur
- `services/risk/*` ‚Äî calculs risque
- `static/analytics-unified.html` ‚Äî dashboard principal
- `static/risk-dashboard.html` ‚Äî risk dashboard
- `static/modules/*` ‚Äî modules front (risk, cycle, phase, on-chain)
- `static/global-config.js` ‚Äî config endpoints
- `tests/*` ‚Äî tests unitaires/int√©gration
- `tests\wealth_smoke.ps1` ‚Äî smoke test Saxo/Wealth

---

## 3) Conventions & garde-fous

- Backend : exceptions propres, logs coh√©rents, pas d‚ÄôURL en dur.
- Frontend : imports ESM (`type="module"`), imports dynamiques pour modules lourds.
- Styles : respecter la charte (Chart.js, `shared-theme.css`, `performance-optimizer.js`).
- CI : lint (ruff/black), mypy ‚Üí tout doit passer en vert.

### Style de sortie attendu de l‚Äôagent
- Toujours produire des diffs unifi√©s (`git diff`) ou patchs minimaux.
- Jamais de dump complet de fichiers.
- Pas de commandes Bash, uniquement PowerShell.
- R√©utiliser les namespaces existants (`/api/ml/*`, `/api/risk/*`, `/api/alerts/*`, `/execution/governance/*`).
- Interdiction d‚Äôajouter `/realtime/publish` ou `/broadcast`.

---

## 4) Endpoints

### Endpoints actifs
- `/api/ml/*` ‚Äî mod√®les ML (volatilit√©, d√©cision, signaux, etc.)
- `/api/risk/*` ‚Äî calculs de risque
- `/api/alerts/*` ‚Äî alertes utilisateurs
- `/execution/governance/*` ‚Äî gouvernance

### Endpoints supprim√©s (ne pas recr√©er)
- `/api/test/*`

### Endpoints de test (dev seulement, prot√©g√©s)
- `/api/alerts/test/*` ‚Äî disponibles uniquement en dev/staging, d√©sactiv√©s par d√©faut, activables via `ENABLE_ALERTS_TEST_ENDPOINTS=true` (toujours off en prod).

---

## 5) Realtime (lecture seule)

- Canaux support√©s : SSE / WebSocket
- Topics autoris√©s (read-only) :
  - Risk scores (blended, CCS, on-chain)
  - Decision index
  - Phase engine state
- Pas d‚Äô√©criture c√¥t√© client (publish/broadcast interdits).

---

## 6) Caches & cross-tab

- Risk Dashboard publie des scores dans `localStorage`.
- Les dashboards doivent :
  - Lire les cl√©s si r√©centes, sinon fallback `risk_scores_cache`.
  - √âcouter l‚Äô√©v√©nement `storage` pour la synchro cross-tab.
- TTL recommand√© : 12h.
- √âviter les re-fetch permanents si le TTL reste valide.

---

## 7) Mod√®les ML & Registry

- Lazy-load avec LRU/TTL via `services/ml/orchestrator.py`.
- Sch√©ma de r√©ponse attendu :
  ```json
  {
    "predictions": {...},
    "std": {...},
    "horizon": "1d"
  }
  ```
- Pas de poids dans le repo : chargement depuis un dossier local pr√©vu.

---

## 8) Phase Engine (D√©tection proactive des phases de march√©)

- Phases possibles : Bull, Bear, Neutral, etc.
- Tilts appliqu√©s dynamiquement aux allocations.
- Priorit√© & bornes :
  - Tilts s‚Äôadditionnent aux macro targets.
  - Cap√©s (Memecoins max 15%, Others max 20%).
  - Les floors d√©finis par la gouvernance priment toujours.
  - R√®gle de priorit√© : `governance floors/caps > phase tilts > defaults`.

---

## 9) UI & Navigation

- Navigation unifi√©e : ne pas cr√©er de nouvelles pages hors `static/`.
- Th√®mes : respecter `shared-theme.css`.
- Iframes : interdits sauf cas document√©.
- Perf front : utiliser `performance-optimizer.js` (virtual scrolling, batching).

---

## 10) Tests

- Unit tests : `tests/unit/*`
- Integration : `tests/integration/*`
- Smoke tests : PowerShell (`tests\wealth_smoke.ps1`)
- Tout nouveau code backend doit √™tre couvert par des tests.

# Crypto Rebal Starter ‚Äî Cockpit Patrimoine Modulaire

Plateforme de gestion de patrimoine cross‚Äëasset (Crypto, Bourse, Banque, Divers) avec IA et gestion unifi√©e des risques. Navigation simplifi√©e autour de 6 pages canoniques: Portfolio, Analytics, Risk, Rebalance, Execution, Settings.

## Fonctionnalit√©s Principales
- **Rebalancing intelligent** avec allocations dynamiques bas√©es sur le contexte r√©el (cycle, r√©gime, concentration wallet)
- **Simulateur Pipeline Complet** (static/simulations.html) : test en temps r√©el du pipeline complet Decision Inputs ‚Üí Risk Budget ‚Üí Targets ‚Üí Phase Tilts ‚Üí Governance ‚Üí Execution avec 10 presets de sc√©narios
- **Decision Engine** avec gouvernance (approbations AI/manuelles)
- **Phase Engine** : d√©tection proactive de phases market avec tilts automatiques (ETH expansion, altseason, risk-off)
- **ML avanc√©** (LSTM, Transformers), signaux temps r√©el
- **Analytics**: Sharpe/Calmar, drawdown, VaR/CVaR
- **Risk management v2**: corr√©lations, stress testing, alertes, circuit breakers, GRI (Group Risk Index)
- **Strategy API v3**: calculs dynamiques rempla√ßant les presets hardcod√©s
- **Classification unifi√©e** des assets via taxonomy_aliases.json (source unique de v√©rit√©)
- **Synchronisation parfaite** Analytics ‚Üî Rebalance via u.targets_by_group
- **35+ dashboards**, navigation unifi√©e, deep links
- **Multi‚Äësources**: CoinTracking CSV/API, donn√©es temps r√©el
- **Syst√®me multi-utilisateurs** avec isolation compl√®te des donn√©es
- **üîÑ Syst√®me de Contradiction Unifi√©**: Source unique, poids adaptatifs, caps risque, classification auto (Low/Medium/High)

## üîÑ Syst√®me de Contradiction Unifi√©

Le syst√®me centralise la gestion des signaux contradictoires avec:

- **Source unique**: `governance.contradiction_index` (0-1 normalis√©)
- **Poids adaptatifs**: Renormalisation automatique (-35%/-15%/+50% baseline)
- **Caps de risque**: R√©duction memecoins (15%‚Üí5%) et small_caps (25%‚Üí12%)
- **Classification**: Low/Medium/High avec recommandations contextuelles
- **Page test**: `/static/test-contradiction-unified.html`
- **Documentation**: `docs/contradiction-system.md`

**Architecture**: S√©lecteurs centralis√©s, politique unifi√©e, validation automatique, int√©gration badges/simulateur.

## D√©marrage rapide
Pr√©requis: Python 3.10+, pip, virtualenv

1) Installer d√©pendances

Linux/macOS:
```
python -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt
cp env.example .env
```

Windows (PowerShell):
```
py -m venv .venv
.\.venv\Scripts\Activate
pip install -r requirements.txt
copy env.example .env
```
2) Lancer l‚ÄôAPI
```
uvicorn api.main:app --reload --port 8000
```
3) Ouvrir l‚ÄôUI (servie par FastAPI)
```
http://localhost:8000/static/settings.html
```
Dans Settings:
- **S√©lectionner un utilisateur** (demo, jack, donato, elda, roberto, clea) dans la barre de navigation
- Choisir la source de donn√©es (fichiers CSV de l'utilisateur, CoinTracking API si configur√©)
- (Optionnel) Configurer les cl√©s API par utilisateur (CoinGecko, CoinTracking, FRED)
- Tester: ¬´ üß™ Tester les APIs ¬ª et ¬´ üß™ Tester la Source ¬ª

Dashboards principaux:
```
http://localhost:8000/static/dashboard.html        # Portfolio overview
http://localhost:8000/static/analytics-unified.html # Analytics unifi√©s + lien vers simulateur
http://localhost:8000/static/risk-dashboard.html   # Risk management
http://localhost:8000/static/rebalance.html        # Rebalancing
http://localhost:8000/static/simulations.html      # Simulateur Pipeline (NOUVEAU)
```

Docs API: `http://localhost:8000/docs` ‚Ä¢ OpenAPI: `/openapi.json`

## Syst√®me Multi-Utilisateurs

La plateforme supporte 6 utilisateurs avec isolation compl√®te des donn√©es:

### Utilisateurs Configur√©s
- **demo** : Utilisateur de d√©monstration avec donn√©es d'exemple
- **jack, donato, elda, roberto, clea** : Utilisateurs individuels avec configurations isol√©es

### Fonctionnalit√©s
- **S√©lecteur utilisateur** : dans la barre de navigation (ind√©pendant du menu Admin)
- **Isolation des donn√©es** : chaque utilisateur a ses propres :
  - Fichiers CSV dans `data/users/{user}/csv/`
  - Configuration dans `data/users/{user}/config.json`
  - Cl√©s API CoinTracking individuelles
- **Sources dynamiques** : l'interface affiche automatiquement :
  - Les fichiers CSV r√©els de l'utilisateur
  - L'option API CoinTracking seulement si des cl√©s sont configur√©es
- **Settings par utilisateur** : sauvegard√©s c√¥t√© serveur avec rechargement automatique

### Endpoints Multi-Utilisateurs
```
GET  /api/users/sources     # Sources disponibles pour l'utilisateur
GET  /api/users/settings    # Configuration utilisateur
PUT  /api/users/settings    # Sauvegarde configuration utilisateur
```

## üöÄ Nouvelles Fonctionnalit√©s (v3.0)

### üîß Production Stabilization (NOUVEAU)
- **Hyst√©r√©sis & EMA Anti-Flickering** : Deadband ¬±2%, persistence 3 ticks pour pr√©venir les oscillations
- **Staleness Gating** : Freeze des poids adaptatifs mais pr√©servation des caps d√©fensifs (>30min)
- **Token Bucket Rate Limiting** : 6 req/s avec burst 12, TTL adaptatif (10s-300s)
- **Suite Tests Compl√®te** : 16 sc√©narios de validation avec tests temps r√©el

### Syst√®me d'Allocation Dynamique
- **√âlimination des presets hardcod√©s** : Plus de templates fig√©s (BTC 40%, ETH 30%, etc.)
- **Calculs contextuels** : Allocations bas√©es sur cycle de march√©, r√©gime, concentration wallet
- **Source canonique unique** : `u.targets_by_group` remplace les presets dispers√©s
- **Synchronisation parfaite** : Analytics ‚Üî Rebalance automatiquement coh√©rents

### Impl√©mentation Technique
```javascript
// Ancien syst√®me (√©limin√©)
if (blended >= 70) {
  stablesTarget = 20; btcTarget = 35; // Preset fig√©
}

// Nouveau syst√®me (dynamique)
function computeMacroTargetsDynamic(ctx, rb, walletStats) {
  const stables = rb.target_stables_pct;  // Source de v√©rit√© risk budget
  const riskyPool = 100 - stables;
  // Modulateurs intelligents selon contexte...
}
```

### B√©n√©fices Utilisateur
- **Coh√©rence garantie** : Plus jamais de "Others 31%" incoh√©rent
- **Adaptabilit√©** : Objectifs s'ajustent automatiquement au profil r√©el
- **Transparence** : Une seule source de donn√©es entre toutes les pages
- **Performance** : Allocations optimis√©es selon concentration du wallet

### Mode Priority Rebalancing
- **Allocation intelligente** : Choix automatique des meilleurs assets dans chaque groupe
- **Support univers limit√©** : Fallback gracieux vers mode proportionnel si donn√©es limit√©es
- **Gestion des locations** : Attribution automatique des vraies exchanges (Kraken, Binance, etc.) depuis les donn√©es CSV
- **Interface unifi√©e** : Toggle simple dans l'interface de rebalancing pour basculer entre modes proportionnel et priority

## Documentation
- Guide agent: `CLAUDE.md`
- Index docs: `docs/index.md`
- Quickstart: `docs/quickstart.md`
- Configuration: `docs/configuration.md`
- Navigation: `docs/navigation.md`
- Architecture: `docs/architecture.md`
- Governance: `docs/governance.md`
- Risk Dashboard: `docs/risk-dashboard.md`
- T√©l√©m√©trie: `docs/telemetry.md`
- Runbooks: `docs/runbooks.md`
- Int√©grations: `docs/integrations.md`
- Refactoring & migration: `docs/refactoring.md`

Endpoints utiles:
```
GET  /healthz
GET  /balances/current?source=cointracking       # CSV
GET  /balances/current?source=cointracking_api   # API CT
GET  /debug/ctapi                                # Sonde CoinTracking API
```

Changelog: `CHANGELOG.md`

## Simulateur Pipeline Complet

**URL**: `http://localhost:8000/static/simulations.html`

Le simulateur permet de tester en temps r√©el le pipeline complet sans impact sur les donn√©es :
```
Decision Inputs ‚Üí Risk Budget ‚Üí Targets ‚Üí Phase Tilts ‚Üí Governance ‚Üí Execution
```

**Fonctionnalit√©s** :
- **10 presets** : Fin Bull Run, Capitulation, ETH Expansion, Altseason, etc.
- **Contr√¥les temps r√©el** : scores, confidences, hyst√©r√©sis, circuit breakers, caps
- **Position r√©elle** : utilise le portefeuille source r√©el pour calculer les deltas
- **Phase Engine unifi√©** : tilts identiques √† la production
- **Market overlays** : volatilit√© Z-score, drawdown 90j, breadth pour circuit breakers
- **Reproductibilit√©** : √©tat d√©terministe, plus de hasard
- **URL hash** : √©tat partageable via URL
- **Mode Live/Simulation** : comparaison avec donn√©es r√©elles

**Architecture technique** :
- Engine principal : `static/modules/simulation-engine.js`
- Contr√¥les UI : `static/components/SimControls.js`
- Inspecteur : `static/components/SimInspector.js`
- Presets : `static/presets/sim_presets.json`

## Notes
- Les documents d√©taill√©s et historiques sont archiv√©s sous `docs/_legacy/`.
- Les endpoints ML/Risk/Alerts ont √©t√© consolid√©s; voir `docs/refactoring.md` pour la migration.
- Classification des assets: `data/taxonomy_aliases.json` est la source unique de v√©rit√© pour tous les groupes d'assets. Les dashboards utilisent automatiquement cette classification via l'API `/taxonomy` et le module `static/shared-asset-groups.js`.

