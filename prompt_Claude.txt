pourquoi vscode n'arrive pas √† lancer automatiquement .\start_dev.ps1 -EnableScheduler ?

D:\Python\crypto-rebal-startertart_dev.ps1: The term 'D:\Python\crypto-rebal-startertart_dev.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.

 *  The terminal process "C:\Program Files\PowerShell\7\pwsh.exe -Command D:\Python\crypto-rebal-startertart_dev.ps1" terminated with exit code: 1. 
 *  Press any key to close the terminal.
Le probl√®me vient d'un chemin corrompu dans la commande VSCode : D:\Python\crypto-rebal-startertart_dev.ps1 (manque le \s avant start_dev.ps1). Cela se produit souvent √† cause d'un probl√®me de configuration de t√¢che (tasks.json) ou d'√©chappement de caract√®res dans VSCode.
Solution rapide (lancer manuellement)
# Dans un terminal PowerShell, depuis la racine du projet
.\start_dev.ps1 -EnableScheduler
Correction permanente (fichier tasks.json)
Si tu utilises une t√¢che VSCode pour lancer le serveur, v√©rifie .vscode/tasks.json : Avant (probablement corrompu) :
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start Dev Server",
      "type": "shell",
      "command": "D:\\Python\\crypto-rebal-startertart_dev.ps1",  // ‚ùå Chemin cass√©
      "args": ["-EnableScheduler"],
      "problemMatcher": []
    }
  ]
}
Apr√®s (correct) :
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start Dev Server",
      "type": "shell",
      "command": "${workspaceFolder}\\start_dev.ps1",
      "args": ["-EnableScheduler"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    }
  ]
}
Alternative (launch.json pour debugging)
Si tu veux lancer avec F5, cr√©e/√©dite .vscode/launch.json :
{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "FastAPI Dev Server",
      "type": "python",
      "request": "launch",
      "module": "uvicorn",
      "args": [
        "api.main:app",
        "--reload",
        "--port",
        "8000"
      ],
      "env": {
        "ENABLE_SCHEDULER": "true"
      },
      "cwd": "${workspaceFolder}",
      "console": "integratedTerminal"
    }
  ]
}
V√©rifications
Chemin du script existe bien :
Test-Path "D:\Python\crypto-rebal-starter\start_dev.ps1"
Politique d'ex√©cution PowerShell (si erreur "script is not digitally signed") :
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned
Quelle m√©thode veux-tu utiliser (lancement manuel, tasks.json, ou launch.json) ?
J'ai √ßa:
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Crypto Rebal Server",
            "type": "shell",
            "windows": {
                "command": "${workspaceFolder}\start_dev.ps1"
            },
            "linux": {
                "command": "${workspaceFolder}/start_dev.sh"
            },
            "osx": {
                "command": "${workspaceFolder}/start_dev.sh"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": [],
            "runOptions": {
                "runOn": "folderOpen"
            }
        }
    ]
}

Tu ne peux pas contr√¥ler toi ?
Si, je peux v√©rifier et corriger ! Laisse-moi lire le fichier actuel et le corriger.
Read D:\Python\crypto-rebal-starter\.vscode\tasks.json
Le probl√®me est que le chemin Windows utilise un backslash simple (\s) qui est interpr√©t√© comme un caract√®re d'√©chappement en JSON. Il faut doubler les backslashes (\\) ou utiliser des slashes normaux (/). De plus, tu veux passer -EnableScheduler en argument.
Edit D:\Python\crypto-rebal-starter\.vscode\tasks.json
‚éø
Added 1 line
1234567891011
123456789101112
‚úÖ Corrig√© ! Changements apport√©s :
Chemin Windows : \start_dev.ps1 ‚Üí /start_dev.ps1 (slashes normaux, compatibles JSON)
Ajout argument : "args": ["-EnableScheduler"] pour activer le scheduler automatiquement
Pour tester :
Recharge VSCode (Cmd/Ctrl+Shift+P ‚Üí "Developer: Reload Window")
La t√¢che devrait maintenant se lancer automatiquement √† l'ouverture du dossier avec le scheduler activ√©
Si tu veux d√©sactiver le lancement auto, retire la section runOptions (lignes 27-29).
dans @static/risk-dashboard.html pourquoi quand je clique plusieurs fois sur le bouton SMART dans Strategic Targets, j'ai toujours des allocations diff√©rentes ?
Le probl√®me vient du fait que le bouton "SMART" recalcule compl√®tement les allocations √† chaque clic au lieu de retourner un r√©sultat d√©terministe. Laisse-moi examiner le code pour identifier la source de la variance :
Grep "SMART.*button|btn-smart|smartAlloc" (in D:\Python\crypto-rebal-starter\static, glob: *.html)
‚éø
1 line of output
Read D:\Python\crypto-rebal-starter\static\risk-dashboard.html (lines 2001-2500)
Grep "renderTargetsContent|btn-smart|SMART" (in D:\Python\crypto-rebal-starter\static, glob: risk-dashboard.html)
‚éø
156 lines of output
Maintenant je vais chercher la fonction proposeTargets dans le module targets-coordinator.js :
Read D:\Python\crypto-rebal-starter\static\modules\targets-coordinator.js
Parfait ! J'ai trouv√© la source du probl√®me. Regardons la fonction generateSmartTargets() √† la ligne 333 :
Probl√®me identifi√© üîç
La fonction generateSmartTargets() g√©n√®re de nouvelles allocations √† chaque appel en utilisant des donn√©es qui peuvent varier l√©g√®rement, notamment :
allocateRiskyBudget() ligne 405 : Cette fonction contient probablement de la logique non-d√©terministe
Backend signals (ligne 376-391) : Si le backend renvoie des valeurs l√©g√®rement diff√©rentes (volatilit√©, decision_score)
M√©tadonn√©es on-chain (ligne 366-368) : Les ajustements de r√©gime changent selon les donn√©es fra√Æches
Le vrai coupable est probablement dans market-regimes.js ‚Üí fonction allocateRiskyBudget(). V√©rifions :
Grep "export function allocateRiskyBudget" (in D:\Python\crypto-rebal-starter\static\modules, glob: market-regimes.js)
‚éø
101 lines of output
Bingo ! üéØ Le probl√®me est √† la ligne 342-349 de market-regimes.js :
// Normaliser √† 100%
const total = allocation.btc + allocation.eth + allocation.midcaps + allocation.meme;
if (total !== 100) {
  const factor = 100 / total;
  allocation.btc = Math.round(allocation.btc * factor);  // ‚ùå ARRONDI NON-D√âTERMINISTE
  allocation.eth = Math.round(allocation.eth * factor);
  allocation.midcaps = Math.round(allocation.midcaps * factor);
  allocation.meme = Math.round(allocation.meme * factor);
}
Probl√®me : Arrondis successifs non-d√©terministes
Chaque Math.round() g√©n√®re des d√©cimales diff√©rentes selon l'ordre d'ex√©cution
Le total peut ne pas √™tre exactement 100 apr√®s arrondis
Chaque clic recalcule les arrondis ‚Üí r√©sultats diff√©rents
Solution : R√©partir le reste sur le plus gros groupe
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Edit failed
12345678
1234567
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 321-380)
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 4 lines
12345678
1234567
‚úÖ Correction appliqu√©e !
Changements effectu√©s
Avant (non-d√©terministe) :
allocation.btc = Math.round(allocation.btc * factor);  // Arrondis variables
allocation.eth = Math.round(allocation.eth * factor);
// ‚Üí Peut donner 99%, 100%, ou 101% selon les d√©cimales
Apr√®s (d√©terministe) :
allocation.btc = Math.floor(allocation.btc * factor);  // Toujours arrondir vers le bas
allocation.eth = Math.floor(allocation.eth * factor);
// ...
const currentTotal = allocation.btc + allocation.eth + allocation.midcaps + allocation.meme;
allocation.btc += (100 - currentTotal);  // Ajuster le reste sur BTC pour garantir 100%
Pourquoi √ßa corrige le probl√®me ?
Math.floor() au lieu de Math.round() : Toujours arrondir vers le bas = d√©terministe
Ajustement du reste sur BTC : Le groupe principal r√©cup√®re les d√©cimales perdues
Garantie de 100% : La somme fait toujours exactement 100%
Test manuel
Recharge la page et clique plusieurs fois sur "üß† SMART" ‚Üí Tu devrais maintenant avoir exactement les m√™mes allocations √† chaque clic ! üéâ Si tu veux v√©rifier dans la console :
// Ouvre la console DevTools (F12)
window.proposeTargets('smart')
// Appelle plusieurs fois et compare les r√©sultats
Tu es s√ªr que SMART fonctionne correctement ???
J'ai des allocations n√©gatives

üéØ Proposed Targets
üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine) (via governance) (unknown)
Stablecoins:
60.0%
L1/L0 majors:
28.3%
L2/Scaling:
21.2%
SOL:
14.2%
DeFi:
7.1%
Others:
0.0%
Memecoins:
-0.4%
Gaming/NFT:
-0.6%
AI/Data:
-1.0%
ETH:
-12.8%
BTC:
-16.0%
Ah merde ! üò± Tu as raison, il y a un bug critique ! Les allocations n√©gatives viennent du fait que riskyPercentage est trop bas (40%) mais la logique essaie d'allouer plus de 100%. Le probl√®me est aux lignes 355-366 : la fonction multiplie chaque groupe par riskyFactor mais oublie que Stablecoins = 100 - riskyPercentage peut d√©passer le budget disponible. Regardons le calcul :
// Si riskyPercentage = 40%
const riskyFactor = 40 / 100 = 0.4

BTC: 50 * 0.4 = 20%
ETH: 30 * 0.4 = 12%
Stablecoins: 100 - 40 = 60%  // ‚úÖ OK

// Mais midcaps se subdivise :
SOL: 15 * 0.4 * 0.2 = 1.2%
L1/L0: 15 * 0.4 * 0.4 = 2.4%
...

// TOTAL = 20 + 12 + 60 + ... = D√âPASSE 100% !
Le vrai probl√®me : la logique de subdivision des midcaps/meme ne respecte pas le budget risky.
Solution : Recalculer correctement
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 325-374)
Je vois le probl√®me ! La logique est correcte EN TH√âORIE mais il y a un bug dans la normalisation finale. Les pourcentages de subdivision (0.2, 0.4, 0.3, etc.) ne sont pas normalis√©s apr√®s avoir √©t√© multipli√©s par riskyFactor. Mais attends, je vois le vrai probl√®me : la fonction retourne des valeurs qui seront ENCORE normalis√©es par normalizeTargets() dans targets-coordinator.js ! √áa cr√©e un double arrondi qui g√©n√®re des valeurs n√©gatives. V√©rifions ce qui se passe apr√®s :
Grep "const smartAllocation = allocateRiskyBudget" (in D:\Python\crypto-rebal-starter\static\modules, glob: targets-coordinator.js)
‚éø
31 lines of output
Voil√† le probl√®me ! Ligne 417 : normalizeTargets(smartAllocation) renormalise les allocations √† 100%, ce qui √©crase les valeurs calcul√©es par allocateRiskyBudget(). Le probl√®me : allocateRiskyBudget() retourne d√©j√† des % qui totalisent 100%, mais normalizeTargets() recalcule le total et applique un facteur de normalisation qui peut cr√©er des valeurs n√©gatives si certains groupes sont √† 0.
Solution : Garantir que allocateRiskyBudget() retourne EXACTEMENT 100%
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 24 lines
12
1234567891011
‚úÖ Correction appliqu√©e ! Maintenant v√©rifions si le vrai probl√®me est dans normalizeTargets() :
Read D:\Python\crypto-rebal-starter\static\modules\targets-coordinator.js (lines 115-149)
Ah ! Le probl√®me est clair maintenant : normalizeTargets() recalcule toujours le ratio m√™me si les targets totalisent d√©j√† 100%. √áa cr√©e des valeurs l√©g√®rement diff√©rentes qui peuvent devenir n√©gatives apr√®s arrondis dans le rendering. Mais attends : si allocateRiskyBudget() retourne exactement 100% (gr√¢ce au fix que je viens d'appliquer), alors normalizeTargets() devrait simplement retourner les m√™mes valeurs. Le vrai probl√®me de tes valeurs n√©gatives vient probablement du fait que l'UI affiche des valeurs arrondies qui ne matchent pas exactement. V√©rifions le rendering :
Grep "function renderTargetsTable" (in D:\Python\crypto-rebal-starter\static, glob: risk-dashboard.html)
‚éø
61 lines of output
OK, le rendering est simple (ligne 6066) : ${allocation.toFixed(1)}%. Donc les valeurs n√©gatives viennent bien des donn√©es retourn√©es par normalizeTargets(). Recharge la page et teste maintenant. Avec le fix que j'ai appliqu√©, allocateRiskyBudget() retourne maintenant exactement 100%, donc normalizeTargets() ne devrait plus cr√©er de valeurs n√©gatives.
Test rapide dans la console
Ouvre la console (F12) et teste :
// V√©rifier que allocateRiskyBudget retourne 100%
const { allocateRiskyBudget, getMarketRegime } = await import('./modules/market-regimes.js');
const regime = getMarketRegime(70);
const result = allocateRiskyBudget(40, regime);

// Calculer le total
const total = Object.entries(result)
  .filter(([k]) => k !== 'model_version')
  .reduce((sum, [, v]) => sum + v, 0);

console.log('Total:', total); // Devrait √™tre 100.00
console.log('Allocations:', result);
Si le total n'est pas exactement 100, alors il faut ajuster la logique de calcul des d√©cimales. Dis-moi ce que √ßa donne ! üîç
risk-dashboard.html:1 Unchecked runtime.lastError: Could not establish connection. Receiving end does not exist.
 üîß DebugLogger initialized - Debug mode: ON
 üîç DEBUG üöÄ Debug Logger loaded - Type toggleDebug() to switch modes
 [debug] üé® Th√®me appliqu√©: auto (effectif: dark)
 [debug] üöÄ Configuration globale charg√©e: Object
 ‚úÖ Risk orchestrator initialized (singleton)
 üîÑ Starting risk store hydration...
 üîÑ Hard refresh detected, forcing cache refresh
 [debug] Cache hit (disk): market-signals
 [debug] üîç Fetching on-chain indicators... Object
 [debug] üéØ Current data source: cointracking_api
 [debug] üåê Calling fetchCryptoToolboxIndicators with SWR... Object
 [debug] CCS computed: 52.97 (model: ccs-1)
 [debug] üîç DEBUG getCurrentCycleMonths: Object
 [debug] üìä Risk Dashboard initialized with data source: cointracking_api
 [debug] ‚úÖ Risk Dashboard: Unified asset groups loaded
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [FlyoutLayoutAdapter] Initializing for .wrap Object
 Loaded dismissed alerts: 2
 Risk Dashboard CCS MVP initializing...
 üîó Risk Dashboard initialized with data source: cointracking_api
 üóÑÔ∏è Initializing persistent cache system...
 Persistent cache system initialized
 Initializing theme for risk-dashboard page...
 [debug] üé® Th√®me appliqu√©: auto (effectif: dark)
 Current theme after risk-dashboard init: dark
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [debug] State hydrated from localStorage
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [debug] üîç Risk Overview using data source: cointracking_api
 [debug] Cache hit (disk): risk-dashboard-balance:jack:cointracking_api:1
 [debug] Loading CCS data...
 [debug] Cache hit (RAM): market-signals
 [debug] üîç DEBUG getCurrentCycleMonths: Object
 [debug] Loading alerts data...
 Risk Dashboard CCS MVP initialized
 [debug] CCS computed: 52.97 (model: ccs-1)
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [risk-sidebar-full] Store not hydrated yet, waiting...
 [debug] CCS loaded: 52.97, Cycle: bull_build (18m)
 üèõÔ∏è Initializing Governance Panel...
 ‚úÖ Governance Panel initialized
 [debug] üîç CryptoToolbox result: Object
 [debug] ‚úÖ CBBI* loaded: 0% 
 [debug] ‚úÖ Pi Cycle loaded: 0% 
 [debug] ‚úÖ MVRV Z-Score loaded: 0% 
 [debug] ‚úÖ RUPL/NUPL loaded: 0% 
 [debug] ‚úÖ 2Y MA loaded: 0% 
 [debug] ‚úÖ Trolololo Trend Line loaded: 0% 
 [debug] ‚úÖ Reserve Risk loaded: 0% 
 [debug] ‚úÖ Woobull loaded: 0% 
 [debug] ‚úÖ BMO (par Prof. Cha√Æne) (EMA 7j) loaded: 0% 
 [debug] ‚úÖ BMO (par Prof. Cha√Æne) (EMA 30j) loaded: 0% 
 [debug] ‚úÖ BMO (par Prof. Cha√Æne) (EMA 90j) loaded: 0% 
 [debug] ‚úÖ NUPL loaded: 0% 
 [debug] ‚úÖ Cointime MVRV-Z Score (EMA 14j) loaded: 0% 
 [debug] ‚úÖ SOPR (MA 90j) loaded: 0% 
 [debug] ‚úÖ Coin Days Destroyed (MA 90j) loaded: 0% 
 [debug] ‚úÖ Mayer Mutiple loaded: 0% 
 [debug] ‚úÖ RSI Mensuel loaded: 0% 
 [debug] ‚úÖ Fear & Greed (moyenne 7 jours) loaded: 0% 
 [debug] ‚úÖ Dominance BTC loaded: 0% üö®
 [debug] ‚úÖ Altcoin Season Index loaded: 0% 
 [debug] ‚úÖ Binance App Rank (FR) loaded: 100% 
 [debug] ‚úÖ Binance App Rank (UK) loaded: 100% 
 [debug] ‚úÖ Crypto.com App Rank (US) loaded: 100% 
 [debug] ‚úÖ Phantom App Rank (US) loaded: 100% 
 [debug] ‚úÖ Google trend "Crypto" loaded: 0% 
 [debug] ‚úÖ Google trend "Buy crypto" loaded: 0% 
 [debug] ‚úÖ Google trend "Bitcoin" loaded: 0% 
 [debug] ‚úÖ Google trend "Ethereum" loaded: 0% 
 [debug] ‚úÖ Nombre de connect√©s JVC loaded: 0% 
 [debug] ‚úÖ Jours depuis halving loaded: 390% üö®
 [debug] ‚úÖ Total 30 indicators loaded from Crypto-Toolbox
 [debug] ‚úÖ Real indicators loaded: 30 total indicators
 [debug] üìä Indicators by source: Object
 [debug] ‚úÖ Risk score from backend API: 90
 [debug] üîç Analyzing correlations for category "onchain_pure" with 6 indicators
 [debug]   üìä MVRV Z-Score: correlationGroup = valuation
 [debug]   üìä RUPL/NUPL: correlationGroup = valuation
 [debug]   üìä NUPL: correlationGroup = valuation
 [debug]   üìä Cointime MVRV-Z Score (EMA 14j): correlationGroup = valuation
 [debug]   üìä SOPR (MA 90j): correlationGroup = undefined
 [debug]   üìä Coin Days Destroyed (MA 90j): correlationGroup = undefined
 [debug] üîó Found correlation groups: Array(1)
 [debug] üîó Correlation group "valuation": 4 indicators, dominant: MVRV Z-Score
 [debug] üîç Analyzing correlations for category "cycle_technical" with 8 indicators
 [debug]   üìä CBBI*: correlationGroup = cycle_timing
 [debug]   üìä Pi Cycle: correlationGroup = cycle_timing
 [debug]   üìä 2Y MA: correlationGroup = moving_averages
 [debug]   üìä Trolololo Trend Line: correlationGroup = trend_lines
 [debug]   üìä Reserve Risk: correlationGroup = undefined
 [debug]   üìä Woobull: correlationGroup = undefined
 [debug]   üìä Mayer Mutiple: correlationGroup = undefined
 [debug]   üìä RSI Mensuel: correlationGroup = undefined
 [debug] üîó Found correlation groups: Array(3)
 [debug] üîó Correlation group "cycle_timing": 2 indicators, dominant: Pi Cycle
 [debug] üîç Analyzing correlations for category "sentiment_social" with 6 indicators
 [debug]   üìä Fear & Greed (moyenne 7 jours): correlationGroup = undefined
 [debug]   üìä Dominance BTC: correlationGroup = undefined
 [debug]   üìä Google trend "Crypto": correlationGroup = undefined
 [debug]   üìä Google trend "Buy crypto": correlationGroup = undefined
 [debug]   üìä Google trend "Bitcoin": correlationGroup = undefined
 [debug]   üìä Google trend "Ethereum": correlationGroup = undefined
 [debug] üîó Found correlation groups: Array(0)
 [debug] üîç Analyzing correlations for category "market_context" with 10 indicators
 [debug]   üìä BMO (par Prof. Cha√Æne) (EMA 7j): correlationGroup = undefined
 [debug]   üìä BMO (par Prof. Cha√Æne) (EMA 30j): correlationGroup = undefined
 [debug]   üìä BMO (par Prof. Cha√Æne) (EMA 90j): correlationGroup = undefined
 [debug]   üìä Altcoin Season Index: correlationGroup = undefined
 [debug]   üìä Binance App Rank (FR): correlationGroup = undefined
 [debug]   üìä Binance App Rank (UK): correlationGroup = undefined
 [debug]   üìä Crypto.com App Rank (US): correlationGroup = undefined
 [debug]   üìä Phantom App Rank (US): correlationGroup = undefined
 [debug]   üìä Nombre de connect√©s JVC: correlationGroup = undefined
 [debug]   üìä Jours depuis halving: correlationGroup = undefined
 [debug] üîó Found correlation groups: Array(0)
 [debug] ü§ñ Dynamic weighting applied: Expansion phase
 [debug] ‚ö†Ô∏è LEGACY MODE: Using inverted risk semantics (will be deprecated)
 [debug] üîç ARRONDI DEBUG: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [risk-sidebar-full] Hydration complete, updating...
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 ‚úÖ Risk store hydrated successfully in 788ms Object
 [FlyoutLayoutAdapter] Initial state from localStorage: Object
 üèõÔ∏è Initializing governance system...
 [debug] üîç Raw API response (Shadow Mode V2): {"sharpe_legacy":1.5886345683879295,"var95":-0.0160675933303594,"risk_score_legacy":90,"structural_legacy":52,"window_used":{"price_history_days":365,"lookback_days":90,"actual_data_points":71,"dual_window_enabled":true,"risk_score_source":"full_intersection"},"risk_version_info":{"active_version":"legacy","risk_score_v2":90,"sharpe_v2":1.5886345683879295,"portfolio_structure_score":82.61433284625244,"integrated_structural_legacy":52}}
 üß™ SHADOW V2 - Risk metrics from API: VaR 95%: -1.61%, Sharpe: 1.59, Risk Score: 90 (authoritative), Structural: 52, Window: 71 pts, risk_version_info: PRESENT ‚úÖ
 [debug] Alerts loaded: 5 active alerts
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] Governance state synced: IDLE
 [debug] üîß Dev mode detected - Admin role forced
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] ML signals synced, contradiction index: 0.475
 ‚úÖ Governance system initialized
 [debug] WebSocket connection opened for navigation badge
 [debug] WealthContextBar: Account sources loaded, restored to "All Accounts"
 [debug] WealthContextBar: Account changed to "All Accounts" (skipSave=true)
 WealthContextBar: Invalid account value format: All Accounts
handleAccountChange @ WealthContextBar.js:266
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] Governance state synced: IDLE
 [debug] User switcher initialized, current user: jack
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîÑ Waiting for orchestrator hydration...
 [debug] üìä Scores loaded from orchestrator: Object
 üìä Score displays updated from cache
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üìä Market Regime calculated: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 Alerts display elements not found
updateAlertsDisplay @ risk-dashboard.html:2806
 [debug] üîÑ Cycle cache miss - no cached content
 [debug] üîÑ Rendering fresh cycle content
 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
 [debug] üíæ Cycle content cached
 [debug] üîÑ Cycles content updated with latest data
 Risk dashboard refreshed successfully
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] ML signals synced, contradiction index: 0.475
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 ‚ùå ‚ùå Element not intersecting yet
error @ debug-logger.js:89
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 23.200000000000003
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 23.200000000000003
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üîç Loading balance data using source: cointracking_api (user: jack, cache-bust: none)
 [debug] üì° Using CoinTracking API source
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 26
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 26
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üîç Loading balance data using source: cointracking_api (user: jack, cache-bust: none)
 [debug] üì° Using CoinTracking API source
 [debug] Switched to tab: targets
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG applyStrategy called with mode: blend
 üîç DEBUG store state before: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 üîç DEBUG proposal result: Object
 üîç DEBUG proposal BTC allocation: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç Creating governance decision with targets: Array(11)
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 30.4
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 30.400000000000006
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] Governance state synced: IDLE
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 [debug] üîç DEBUG applyTargets - proposalResult.targets: Object
 [debug] üîç DEBUG applyTargets - BTC allocation: 41.39245676939136
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 36
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 36
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 45.6
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 45.6
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 60.8
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 60.80000000000001
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 90
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 90
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG applyTargets - Full proposal result: Object
 [debug] üîç DEBUG applyTargets - Targets being saved: Object
 [debug] üîç DEBUG applyTargets - BTC before save: 41.39245676939136
 [debug] üîç DEBUG applyTargets - ETH before save: 29.228883946807056
 [debug] üîç DEBUG applyTargets - BTC after save: 41.39245676939136
 [debug] üîç DEBUG applyTargets - ETH after save: 29.228883946807056
 [debug] Targets applied successfully: High Score: Blended (70)
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 180
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 180
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: NaN
 [debug] üîç DEBUG proposeTargets - after normalization BTC: NaN
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -180
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -180.00000000000003
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 Applied strategy via governance: blend - High Score: Blended (70)
 Governance mode: manual, state: IDLE
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG applyStrategy called with mode: smart
 üîç DEBUG store state before: Object
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -90
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -90
 üîç DEBUG proposal result: Object
 üîç DEBUG proposal BTC allocation: -90
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç Creating governance decision with targets: Array(11)
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -59.599999999999994
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -59.59999999999997
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] Governance state synced: IDLE
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 [debug] üîç DEBUG applyTargets - proposalResult.targets: Object
 [debug] üîç DEBUG applyTargets - BTC allocation: -90
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -44.4
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -44.400000000000006
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -36
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -36
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -29.200000000000003
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -29.200000000000003
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -25.2
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -25.2
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG applyTargets - Full proposal result: Object
 [debug] üîç DEBUG applyTargets - Targets being saved: Object
 [debug] üîç DEBUG applyTargets - BTC before save: -90
 [debug] üîç DEBUG applyTargets - ETH before save: -70
 [debug] üîç DEBUG applyTargets - BTC after save: -90
 [debug] üîç DEBUG applyTargets - ETH after save: -70
 [debug] Targets applied successfully: üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -22
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -22
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -19.6
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -19.6
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -18
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -18
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
 Governance mode: manual, state: IDLE
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç DEBUG applyStrategy called with mode: smart
 üîç DEBUG store state before: Object
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -16
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -16
 üîç DEBUG proposal result: Object
 üîç DEBUG proposal BTC allocation: -16
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 üîç Creating governance decision with targets: Array(11)
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -14.000000000000002
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -14.000000000000002
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] Governance state synced: IDLE
 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ630,96 $US
 [debug] üîç DEBUG applyTargets - proposalResult.targets: Object
 [debug] üîç DEBUG applyTargets - BTC allocation: -16
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -13.600000000000001
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -13.600000000000001
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
 [debug] üß† Generating SMART targets with scores: Object
 [debug] üí∞ Risk Budget from cache: 70-90-legacy
 [debug] üß† Smart allocation calculated: Object
 [debug] üìä Risk budget: Object
 [debug] üéØ Regime: Euphorie
 [debug] üîç DEBUG proposeTargets - before normalization BTC: -12.4
 [debug] üîç DEBUG proposeTargets - after normalization BTC: -12.4
 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
 üîç Loading portfolio allocation using configured source...
 [debug] üöÄ Balance data loaded from cache (user: jack)
 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
 [risk-sidebar-full] CCS score check: Object
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
debug-logger.js:180 [debug] üß† Generating SMART targets with scores: Object
debug-logger.js:180 [debug] üí∞ Risk Budget from cache: 70-90-legacy
debug-logger.js:180 [debug] üß† Smart allocation calculated: Object
debug-logger.js:180 [debug] üìä Risk budget: Object
debug-logger.js:180 [debug] üéØ Regime: Euphorie
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: -11.200000000000001
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: -11.200000000000001
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
debug-logger.js:180 [debug] üöÄ Balance data loaded from cache (user: jack)
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: Object
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906609
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 41.392456769391366
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 41.39245676939136
debug-logger.js:180 [debug] üß† Generating SMART targets with scores: Object
debug-logger.js:180 [debug] üí∞ Risk Budget from cache: 70-90-legacy
debug-logger.js:180 [debug] üß† Smart allocation calculated: Object
debug-logger.js:180 [debug] üìä Risk budget: Object
debug-logger.js:180 [debug] üéØ Regime: Euphorie
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: -10.799999999999999
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: -10.799999999999999
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: Object
risk-dashboard.html:5975 üîç DEBUG renderTargetsCon

[Message truncated - exceeded 50,000 character limit]
üö® GROS PROBL√àME ! Les logs montrent que BTC devient n√©gatif et d√©croit √† chaque clic :
BTC: 23.2   ‚Üí 26 ‚Üí 30.4 ‚Üí 36 ‚Üí 45.6 ‚Üí 60.8 ‚Üí 90 ‚Üí NaN ‚Üí -180 ‚Üí -90 ‚Üí -59.6 ‚Üí -44.4 ‚Üí ...
C'est explosif ! Il y a un bug d'accumulation quelque part. Regardons les logs cl√©s :
[debug] üß† Smart allocation calculated: Object
[debug] üîç DEBUG proposeTargets - before normalization BTC: -90
Le probl√®me : allocateRiskyBudget() retourne des valeurs qui s'accumulent n√©gativement au lieu de rester stables.
Hypoth√®se : allocation.btc est modifi√© en place
Regardons le code de allocateRiskyBudget() ligne 336-339 :
allocation.btc += bias.btc_boost || 0;  // ‚ùå ACCUMULATION !
Si allocation est un objet r√©utilis√© (cache), alors chaque appel ajoute au lieu de remplacer ! Mais non, l'objet est cr√©√© √† chaque fois ligne 326-331... Donc ce n'est pas √ßa. Attends ! Je viens de voir dans les logs :
[debug] üí∞ Risk Budget from cache: 70-90-legacy
Il y a un CACHE ! Le probl√®me vient du cache de calculateRiskBudget() qui retourne toujours le m√™me objet mut√© ! Cherchons le cache :
Grep "_riskBudgetCache|Risk Budget from cache" (in D:\Python\crypto-rebal-starter\static\modules, glob: market-regimes.js)
‚éø
37 lines of output
Bingo ! Ligne 232 : return _riskBudgetCache.data; retourne LA M√äME R√âF√âRENCE OBJET ! Donc quand allocateRiskyBudget() modifie allocation.btc, √ßa modifie l'objet en cache !
Solution : Retourner une COPIE du cache
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Edit failed
12345
12345
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 226-245)
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 1 line
12345
123456
‚úÖ Fix appliqu√© ! Maintenant le cache retourne une copie profonde au lieu de la r√©f√©rence originale. Mais attends... le probl√®me est plus profond ! Regardons o√π allocateRiskyBudget() NE MUTE PAS son input mais cr√©e un nouvel objet... Ah non ! Il ne re√ßoit PAS l'objet cache, il re√ßoit juste riskyPercentage (un nombre). Le vrai probl√®me est ailleurs. Laisse-moi chercher o√π l'objet allocation est mut√© : Attends, je viens de r√©aliser : dans mes logs tu as :
BTC: 23.2 ‚Üí 26 ‚Üí 30.4 ‚Üí 36 ‚Üí 45.6 ‚Üí 60.8 ‚Üí 90 ‚Üí -180 ‚Üí -90
C'est une s√©rie g√©om√©trique ! Chaque valeur change selon un pattern. Regardons le code de allocate RiskyBudget() ligne 345-352 que j'ai modifi√© :
allocation.btc = Math.floor(allocation.btc * factor);
//...
allocation.btc += (100 - currentTotal);  // ‚Üê ICI ON MUTE allocation.btc !
Mais allocation est local, cr√©√© ligne 326... donc pas de probl√®me de mutation. ATTENDS ! Je vois le probl√®me maintenant dans les logs :
üîç allocateRiskyBudget: { riskyPercentage, totalRisky, stables, sum }
Il manque le console.log que j'ai ajout√© ! Donc mon code n'a PAS √©t√© charg√© ! Le navigateur utilise encore l'ancienne version en cache ! Recharge la page en for√ßant le cache : Ctrl+Shift+R (Windows) ou Cmd+Shift+R (Mac) Puis reteste SMART plusieurs fois. Les allocations devraient maintenant √™tre stables ! üéØ
risk-dashboard.html:1 Unchecked runtime.lastError: Could not establish connection. Receiving end does not exist.
debug-logger.js:25 üîß DebugLogger initialized - Debug mode: ON
debug-logger.js:113 üîç DEBUG üöÄ Debug Logger loaded - Type toggleDebug() to switch modes
risk-data-orchestrator.js:16 ‚úÖ Risk orchestrator initialized (singleton)
risk-data-orchestrator.js:32 üîÑ Starting risk store hydration...
risk-data-orchestrator.js:40 üîÑ Hard refresh detected, forcing cache refresh
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
flyout-layout-adapter.js:24 [FlyoutLayoutAdapter] Initializing for .wrap {offset: 20, transition: '0.3s ease'}
risk-dashboard.html:6507 Loaded dismissed alerts: 3
risk-dashboard.html:7279 Risk Dashboard CCS MVP initializing...
risk-dashboard.html:7283 üîó Risk Dashboard initialized with data source: cointracking_api
risk-dashboard.html:7073 üóÑÔ∏è Initializing persistent cache system...
risk-dashboard.html:7287 Persistent cache system initialized
risk-dashboard.html:7301 Initializing theme for risk-dashboard page...
risk-dashboard.html:7308 Current theme after risk-dashboard init: dark
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-dashboard.html:7374 Risk Dashboard CCS MVP initialized
risk-dashboard.html:7392 üèõÔ∏è Initializing Governance Panel...
risk-dashboard.html:7402 ‚úÖ Governance Panel initialized
flyout-layout-adapter.js:58 [FlyoutLayoutAdapter] Initial state from localStorage: {persistKey: 'risk_dashboard_flyout', persisted: {‚Ä¶}}
risk-dashboard.html:6596 Skipping already dismissed alert: ALR-20251008-132043-e45b1ec9
risk-dashboard.html:7324 üèõÔ∏è Initializing governance system...
risk-dashboard.html:2432 üß™ SHADOW V2 - Risk metrics from API: VaR 95%: -1.61%, Sharpe: 1.59, Risk Score: 90 (authoritative), Structural: 52, Window: 71 pts, risk_version_info: PRESENT ‚úÖ
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-dashboard.html:7327 ‚úÖ Governance system initialized
WealthContextBar.js:266 WealthContextBar: Invalid account value format: All Accounts
handleAccountChange @ WealthContextBar.js:266
loadAndPopulateAccountSources @ WealthContextBar.js:690
await in loadAndPopulateAccountSources
render @ WealthContextBar.js:647
initWealthContextBar @ WealthContextBar.js:981
(anonymous) @ WealthContextBar.js:987
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:192 [risk-sidebar-full] Hydration complete, updating...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-data-orchestrator.js:302 ‚úÖ Risk store hydrated successfully in 2107ms {ccs: '52.92 (Neutral+)', cycle: 'bull_build (18mo)', onchain: '62.0', blended: '70.0', risk: '90.0', ‚Ä¶}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:7271 üìä Score displays updated from cache
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:2806 Alerts display elements not found
updateAlertsDisplay @ risk-dashboard.html:2806
refreshDashboard @ risk-dashboard.html:3843
await in refreshDashboard
(anonymous) @ risk-dashboard.html:7319
risk-dashboard.html:7122 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
risk-dashboard.html:3851 Risk dashboard refreshed successfully
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:6548 Hiding all toasts...
risk-dashboard.html:6556 Found 4 toasts to hide in container
risk-dashboard.html:6569 Hiding toast 0: toast-ALR-20251008-131735-764a1283
risk-dashboard.html:6569 Hiding toast 1: toast-ALR-20251008-131839-23595017
risk-dashboard.html:6569 Hiding toast 2: toast-ALR-20251008-131942-9c327c9f
risk-dashboard.html:6569 Hiding toast 3: toast-ALR-20251008-132145-6251ab91
risk-dashboard.html:6589 All toasts cleared
debug-logger.js:89 ‚ùå ‚ùå Element not intersecting yet
error @ debug-logger.js:89
(anonymous) @ lazy-loader.js:46
IntersectionObserver.rootMargin @ lazy-loader.js:40
risk-dashboard.html:6574 Removed toast 0
risk-dashboard.html:6574 Removed toast 1
risk-dashboard.html:6574 Removed toast 2
risk-dashboard.html:6574 Removed toast 3
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:48.635Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:48.637Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.373Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: 30.400000000000006
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.384Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.385Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.388Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.390Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.391Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.394Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.395Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.396Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.811Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -59.59999999999997
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.821Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.822Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.824Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.825Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.827Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.829Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.831Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.832Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.770Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -14.000000000000002
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.779Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.781Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.782Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.784Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.785Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.789Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.790Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.791Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
TOUJOURS LE M√äME PROBL√àME ! üò§
BTC: 30.4 ‚Üí -59.6 ‚Üí -14.0 (encore n√©gatif!)
Le cache fix ne suffit pas car le probl√®me est ailleurs. Regardons les logs attentivement :
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: 30.400000000000006  // ‚úÖ OK
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -59.59999999999997  // ‚ùå 2√®me clic
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -14.000000000000002 // ‚ùå 3√®me clic
Le probl√®me : proposeTargets('smart') retourne des valeurs diff√©rentes √† chaque appel m√™me si les scores sont identiques (blended=70). Le log manquant crucial : üîç allocateRiskyBudget que j'avais ajout√© n'appara√Æt PAS ! Donc le nouveau code n'est pas charg√©.
Hard reload du module JS
Le probl√®me : les modules ESM sont cach√©s par le navigateur. Il faut vider TOUT le cache :
Ouvre DevTools (F12)
Clic droit sur le bouton Reload (avec DevTools ouvert)
S√©lectionne "Empty Cache and Hard Reload"
OU en console :
// Forcer le rechargement de market-regimes.js avec cache-bust
const timestamp = Date.now();
import(`./modules/market-regimes.js?v=${timestamp}`).then(m => {
  console.log('‚úÖ Module recharg√©:', m);
  // Tester allocateRiskyBudget
  const regime = m.getMarketRegime(70);
  const result = m.allocateRiskyBudget(40, regime);
  console.log('Test allocation:', result);
  
  // V√©rifier le total
  const total = Object.entries(result)
    .filter(([k]) => k !== 'model_version')
    .reduce((sum, [, v]) => sum + v, 0);
  console.log('Total (devrait √™tre 100):', total);
});
Si √ßa ne marche toujours pas, le probl√®me est plus profond. Il faut ajouter des logs pour voir exactement ce qui se passe dans allocateRiskyBudget(). Veux-tu que j'ajoute des console.log dans allocateRiskyBudget() pour tracer le bug ? üîç
risk-dashboard.html:1 Unchecked runtime.lastError: Could not establish connection. Receiving end does not exist.
debug-logger.js:25 üîß DebugLogger initialized - Debug mode: ON
debug-logger.js:113 üîç DEBUG üöÄ Debug Logger loaded - Type toggleDebug() to switch modes
risk-data-orchestrator.js:16 ‚úÖ Risk orchestrator initialized (singleton)
risk-data-orchestrator.js:32 üîÑ Starting risk store hydration...
risk-data-orchestrator.js:40 üîÑ Hard refresh detected, forcing cache refresh
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
flyout-layout-adapter.js:24 [FlyoutLayoutAdapter] Initializing for .wrap {offset: 20, transition: '0.3s ease'}
risk-dashboard.html:6507 Loaded dismissed alerts: 3
risk-dashboard.html:7279 Risk Dashboard CCS MVP initializing...
risk-dashboard.html:7283 üîó Risk Dashboard initialized with data source: cointracking_api
risk-dashboard.html:7073 üóÑÔ∏è Initializing persistent cache system...
risk-dashboard.html:7287 Persistent cache system initialized
risk-dashboard.html:7301 Initializing theme for risk-dashboard page...
risk-dashboard.html:7308 Current theme after risk-dashboard init: dark
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-dashboard.html:7374 Risk Dashboard CCS MVP initialized
risk-dashboard.html:7392 üèõÔ∏è Initializing Governance Panel...
risk-dashboard.html:7402 ‚úÖ Governance Panel initialized
flyout-layout-adapter.js:58 [FlyoutLayoutAdapter] Initial state from localStorage: {persistKey: 'risk_dashboard_flyout', persisted: {‚Ä¶}}
risk-dashboard.html:6596 Skipping already dismissed alert: ALR-20251008-132043-e45b1ec9
risk-dashboard.html:7324 üèõÔ∏è Initializing governance system...
risk-dashboard.html:2432 üß™ SHADOW V2 - Risk metrics from API: VaR 95%: -1.61%, Sharpe: 1.59, Risk Score: 90 (authoritative), Structural: 52, Window: 71 pts, risk_version_info: PRESENT ‚úÖ
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-dashboard.html:7327 ‚úÖ Governance system initialized
WealthContextBar.js:266 WealthContextBar: Invalid account value format: All Accounts
handleAccountChange @ WealthContextBar.js:266
loadAndPopulateAccountSources @ WealthContextBar.js:690
await in loadAndPopulateAccountSources
render @ WealthContextBar.js:647
initWealthContextBar @ WealthContextBar.js:981
(anonymous) @ WealthContextBar.js:987
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:192 [risk-sidebar-full] Hydration complete, updating...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-data-orchestrator.js:302 ‚úÖ Risk store hydrated successfully in 2107ms {ccs: '52.92 (Neutral+)', cycle: 'bull_build (18mo)', onchain: '62.0', blended: '70.0', risk: '90.0', ‚Ä¶}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:7271 üìä Score displays updated from cache
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:2806 Alerts display elements not found
updateAlertsDisplay @ risk-dashboard.html:2806
refreshDashboard @ risk-dashboard.html:3843
await in refreshDashboard
(anonymous) @ risk-dashboard.html:7319
risk-dashboard.html:7122 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
risk-dashboard.html:3851 Risk dashboard refreshed successfully
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:6548 Hiding all toasts...
risk-dashboard.html:6556 Found 4 toasts to hide in container
risk-dashboard.html:6569 Hiding toast 0: toast-ALR-20251008-131735-764a1283
risk-dashboard.html:6569 Hiding toast 1: toast-ALR-20251008-131839-23595017
risk-dashboard.html:6569 Hiding toast 2: toast-ALR-20251008-131942-9c327c9f
risk-dashboard.html:6569 Hiding toast 3: toast-ALR-20251008-132145-6251ab91
risk-dashboard.html:6589 All toasts cleared
debug-logger.js:89 ‚ùå ‚ùå Element not intersecting yet
error @ debug-logger.js:89
(anonymous) @ lazy-loader.js:46
IntersectionObserver.rootMargin @ lazy-loader.js:40
risk-dashboard.html:6574 Removed toast 0
risk-dashboard.html:6574 Removed toast 1
risk-dashboard.html:6574 Removed toast 2
risk-dashboard.html:6574 Removed toast 3
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:48.635Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:48.637Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.373Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: 30.400000000000006
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.384Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.385Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.388Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.390Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.391Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.394Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.395Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:50.396Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.811Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -59.59999999999997
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.821Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.822Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.824Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.825Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.827Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.829Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.831Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:52.832Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.770Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -14.000000000000002
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.779Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.781Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.782Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.784Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.785Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.789Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.790Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.04, ccsScore: 52.92, final: 67.04, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 70
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'High Score: Blended (70)', mode: 'blend', confidence: 0.6704000000000001, timestamp: '2025-10-08T11:22:56.791Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: High Score: Blended (70)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 41.39245676939136
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü° Euphorie (70) | 60% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ385,27 $US
// Forcer le rechargement de market-regimes.js avec cache-bust
const timestamp = Date.now();
import(`./modules/market-regimes.js?v=${timestamp}`).then(m => {
  console.log('‚úÖ Module recharg√©:', m);
  // Tester allocateRiskyBudget
  const regime = m.getMarketRegime(70);
  const result = m.allocateRiskyBudget(40, regime);
  console.log('Test allocation:', result);
  
  // V√©rifier le total
  const total = Object.entries(result)
    .filter(([k]) => k !== 'model_version')
    .reduce((sum, [, v]) => sum + v, 0);
  console.log('Total (devrait √™tre 100):', total);
});
Promise {<pending>}
VM390:4 ‚úÖ Module recharg√©: Module {‚Ä¶}
VM390:8 Test allocation: {BTC: 17.2, ETH: 12.4, SOL: 1.7600000000000002, L1/L0 majors: 3.5200000000000005, L2/Scaling: 2.64, ‚Ä¶}
VM390:14 Total (devrait √™tre 100): 100
üéâ EXCELLENT ! Le module recharg√© fonctionne PARFAITEMENT : le total fait exactement 100 ! Mais le probl√®me persiste dans l'UI car le navigateur utilise toujours l'ancienne version cach√©e du module.
Solution : Forcer le rechargement avec version timestamp
Il faut ajouter un cache-bust dans l'import du module. Modifions risk-dashboard.html pour forcer le rechargement :
Grep "import.*market-regimes\.js" (in D:\Python\crypto-rebal-starter\static, glob: risk-dashboard.html)
‚éø
1 line of output
Edit D:\Python\crypto-rebal-starter\static\risk-dashboard.html
‚éø
Edit failed
1
1
OK, approche plus simple : red√©marre le serveur backend pour vider tous les caches :
# Arr√™te le serveur (Ctrl+C)
# Puis relance
.\.venv\Scripts\Activate.ps1
uvicorn api.main:app --reload --port 8000
Puis dans le navigateur :
Vide tout le cache : Ctrl+Shift+Delete ‚Üí Cocher "Cached images and files" ‚Üí Clear
Recharge : Ctrl+F5
Si √ßa ne marche toujours pas, il faut changer le nom du fichier :
# Renommer temporairement
mv static/modules/market-regimes.js static/modules/market-regimes-v2.js
Puis mettre √† jour tous les imports, mais c'est lourd. Alternative rapide : Ajoute ?v=timestamp directement dans l'URL du navigateur :
http://localhost:8000/static/risk-dashboard.html?bust=1
Teste et dis-moi si √ßa marche ! üî•
non, ca change tout le temps et j'ai des valeurs n√©gatives:

debug-logger.js:25 üîß DebugLogger initialized - Debug mode: ON
debug-logger.js:113 üîç DEBUG üöÄ Debug Logger loaded - Type toggleDebug() to switch modes
risk-data-orchestrator.js:16 ‚úÖ Risk orchestrator initialized (singleton)
risk-data-orchestrator.js:32 üîÑ Starting risk store hydration...
risk-data-orchestrator.js:40 üîÑ Hard refresh detected, forcing cache refresh
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
flyout-layout-adapter.js:24 [FlyoutLayoutAdapter] Initializing for .wrap {offset: 20, transition: '0.3s ease'}
risk-dashboard.html:7279 Risk Dashboard CCS MVP initializing...
risk-dashboard.html:7283 üîó Risk Dashboard initialized with data source: cointracking_api
risk-dashboard.html:7073 üóÑÔ∏è Initializing persistent cache system...
risk-dashboard.html:7287 Persistent cache system initialized
risk-dashboard.html:7301 Initializing theme for risk-dashboard page...
risk-dashboard.html:7308 Current theme after risk-dashboard init: dark
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-dashboard.html:7374 Risk Dashboard CCS MVP initialized
risk-dashboard.html:7392 üèõÔ∏è Initializing Governance Panel...
risk-dashboard.html:7402 ‚úÖ Governance Panel initialized
flyout-layout-adapter.js:58 [FlyoutLayoutAdapter] Initial state from localStorage: {persistKey: 'risk_dashboard_flyout', persisted: {‚Ä¶}}
risk-dashboard.html:7324 üèõÔ∏è Initializing governance system...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-dashboard.html:7180 üßπ All persistent cache cleared for source cointracking_api
risk-dashboard.html:7291 üîÑ Data source changed, clearing cache and reloading... {oldSource: 'csv', newSource: 'cointracking_api', oldFile: null, newFile: null}
risk-dashboard.html:7294 Uncaught ReferenceError: loadDashboard is not defined
    at risk-dashboard.html:7294:20
    at WealthContextBar.handleAccountChange (WealthContextBar.js:385:14)
    at async WealthContextBar.loadAndPopulateAccountSources (WealthContextBar.js:690:7)
(anonymous) @ risk-dashboard.html:7294
handleAccountChange @ WealthContextBar.js:385
await in handleAccountChange
loadAndPopulateAccountSources @ WealthContextBar.js:690
await in loadAndPopulateAccountSources
render @ WealthContextBar.js:647
initWealthContextBar @ WealthContextBar.js:981
(anonymous) @ WealthContextBar.js:987
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:192 [risk-sidebar-full] Hydration complete, updating...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-data-orchestrator.js:302 ‚úÖ Risk store hydrated successfully in 1788ms {ccs: '52.91 (Neutral+)', cycle: 'bull_build (18mo)', onchain: '33.0', blended: '61.0', risk: '90.0', ‚Ä¶}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:7327 ‚úÖ Governance system initialized
risk-dashboard.html:2432 üß™ SHADOW V2 - Risk metrics from API: VaR 95%: -1.61%, Sharpe: 1.59, Risk Score: 90 (authoritative), Structural: 52, Window: 71 pts, risk_version_info: PRESENT ‚úÖ
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:7271 üìä Score displays updated from cache
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:2806 Alerts display elements not found
updateAlertsDisplay @ risk-dashboard.html:2806
refreshDashboard @ risk-dashboard.html:3843
await in refreshDashboard
(anonymous) @ risk-dashboard.html:7319
risk-dashboard.html:7122 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
risk-dashboard.html:3851 Risk dashboard refreshed successfully
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:89 ‚ùå ‚ùå Element not intersecting yet
error @ debug-logger.js:89
(anonymous) @ lazy-loader.js:46
IntersectionObserver.rootMargin @ lazy-loader.js:40
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:7122 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
risk-dashboard.html:7122 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
risk-dashboard.html:7956 üîß BitcoinCycleChart constructor called with element: <div class=‚Äã"risk-card" style=‚Äã"margin-bottom:‚Äã 2rem;‚Äã" data-lazy-load=‚Äã"component" data-lazy-component=‚Äã"BitcoinCycleChart">‚Äã‚Ä¶‚Äã</div>‚Äã
risk-dashboard.html:7961 üîç Placeholder found: true Canvas found: true
risk-dashboard.html:7965 üöÄ BitcoinCycleChart init() called
risk-dashboard.html:7969 ‚úÖ Showing loading indicator
risk-dashboard.html:7982 üìä Starting to load Chart.js...
risk-dashboard.html:8034 üìä Loading Chart.js...
risk-dashboard.html:8065 ‚úÖ Chart.js loaded successfully
risk-dashboard.html:7984 ‚úÖ Chart.js loaded successfully
risk-dashboard.html:7987 üîÑ Switching from placeholder to canvas...
risk-dashboard.html:7990 ‚úÖ Placeholder hidden
risk-dashboard.html:7994 ‚úÖ Canvas shown
risk-dashboard.html:8001 üìä Calling createBitcoinCycleChart...
risk-dashboard.html:4504 üèõÔ∏è Tentative de r√©cup√©ration historique Bitcoin...
risk-dashboard.html:4508 üèõÔ∏è R√©cup√©ration historique Bitcoin depuis FRED via proxy...
risk-dashboard.html:4518 ‚úÖ FRED Proxy: 3929 points r√©cup√©r√©s (premi√®re: $370, derni√®re: $121524.02)
risk-dashboard.html:4519 üìä Total disponible: 3964 observations
risk-dashboard.html:4524 üéØ HISTORIQUE COMPLET: Donn√©es depuis 2014!
risk-dashboard.html:4692 üéØ Calibration historique automatique (fresh): {params: {‚Ä¶}, score: 1399.3385777883386}
risk-dashboard.html:4740 üìä Bitcoin price data loaded: {dataPoints: 3929, latestPrice: 121524.02, dataSource: 'CoinGecko API'}
risk-dashboard.html:5172 ‚úÖ Bitcoin cycle chart created successfully
risk-dashboard.html:7122 üíæ Cached CYCLE_CHART data for source cointracking_api (TTL: 24h)
risk-dashboard.html:8003 ‚úÖ createBitcoinCycleChart completed
risk-dashboard.html:8009 ‚úÖ Bitcoin Cycle Chart loaded successfully via lazy loading
risk-dashboard.html:5226 üîÑ Loading on-chain indicators modules...
risk-dashboard.html:5250 ü§ñ Dynamic weighting applied: Early Expansion phase
risk-dashboard.html:5535 ‚úÖ Indicateurs on-chain (th√©m√©s) charg√©s: {sigmoidScore: 99.77608568025711, composite: 33, enhanced: 83}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:28:59.497Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:28:59.499Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü¢ Expansion (61) | 68% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.877Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: 32
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.886Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.887Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.889Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.890Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.891Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.893Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.894Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:02.895Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü¢ Expansion (61) | 68% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü¢ Expansion (61) | 68% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.504Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -39.68
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.513Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.515Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.516Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.517Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.518Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.520Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.521Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:03.522Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü¢ Expansion (61) | 68% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:6326 üîç DEBUG applyStrategy called with mode: smart
risk-dashboard.html:6327 üîç DEBUG store state before: {riskMetrics: {‚Ä¶}, portfolioSummary: {‚Ä¶}, correlationMetrics: {‚Ä¶}, ccs: {‚Ä¶}, cycle: {‚Ä¶}, ‚Ä¶}
risk-dashboard.html:6330 üîç DEBUG proposal result: {targets: {‚Ä¶}, strategy: 'üü¢ Expansion (61) | 68% Stables | Cap 40% (Decision Engine)', mode: 'smart', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.040Z'}
risk-dashboard.html:6331 üîç DEBUG proposal BTC allocation: -11.84
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:6347 üîç Creating governance decision with targets: (11) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.047Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.049Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.050Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.051Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.052Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.054Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.055Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 67.03, ccsScore: 52.91, final: 67.03, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6703, timestamp: '2025-10-08T11:29:04.056Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
risk-dashboard.html:6371 Applied strategy via governance: smart - üü¢ Expansion (61) | 68% Stables | Cap 40% (Decision Engine)
risk-dashboard.html:6372 Governance mode: manual, state: IDLE
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 460‚ÄØ131,08 $US
OK, je vois maintenant le vrai probl√®me ! Regardons les valeurs :
BTC: 32 ‚Üí -39.68 ‚Üí -11.84 (N√âGATIF et change √† chaque clic!)
Le module n'est toujours PAS recharg√© malgr√© le cache-bust que tu as fait. Le navigateur utilise l'ancienne version avec le bug.
Solution RADICALE : Ajout de logs de d√©bogage INLINE
Au lieu d'essayer de forcer le rechargement du module (ce qui ne marche pas), je vais ajouter des logs directement dans allocateRiskyBudget() pour comprendre ce qui se passe :
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Edit failed
12345678
123456789101112
OK, derni√®re tentative : cr√©ons un nouveau fichier avec les corrections pour forcer le rechargement :
Bash
‚éø
List market-regimes files
IN
cd "D:\Python\crypto-rebal-starter\static\modules" && dir market-regimes*
OUT
market-regimes.js
Le probl√®me est que m√™me avec un hard reload, le navigateur garde l'ancien code en cache. Solution finale : SUPPRIMER le cache TTL 30s completement Le cache est le probl√®me racine. Supprimons-le :
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 209-308)
JE VOIS LE PROBL√àME ! Le cache retourne maintenant une copie (ligne 233), mais allocateRiskyBudget() ne mute PAS le cache - il cr√©e un nouvel objet ! Donc le probl√®me n'est PAS le cache. Le vrai bug doit √™tre dans allocateRiskyBudget() lui-m√™me ou dans normalizeTargets(). Comme le module n'est pas recharg√©, supprimons compl√®tement le cache pour forcer un recalcul √† chaque fois :
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Modified
123456
123
‚úÖ Cache d√©sactiv√© ! Maintenant :
Red√©marre le serveur :
# Ctrl+C pour arr√™ter
uvicorn api.main:app --reload --port 8000
Dans le navigateur : Ctrl+Shift+R (hard reload)
Clique sur SMART plusieurs fois
Tu devrais maintenant voir dans la console :
üí∞ NO CACHE - Calculating fresh Risk Budget
Et les allocations doivent √™tre identiques √† chaque clic ! üéØ Si √ßa marche, je r√©activerai le cache et on ajoutera des logs pour comprendre pourquoi l'ancienne version avait ce bug.
je vois no cache mais ca change tout le temps
OK, donc le cache n'est PAS le probl√®me ! Le module est bien recharg√© (on voit "NO CACHE"), mais les valeurs changent quand m√™me. Cr√©ons une TODO list puis ajoutons des logs pour tracer le bug :
Update Todos

Identifier pourquoi allocateRiskyBudget() retourne des valeurs diff√©rentes √† chaque appel

Ajouter logs de d√©bogage dans allocateRiskyBudget()

V√©rifier si le probl√®me vient de la normalisation ou des arrondis

Fixer le bug et tester avec plusieurs clics SMART
Maintenant ajoutons des logs d√©taill√©s dans allocateRiskyBudget() :
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 356-405)
Le log existe d√©j√† ligne 376-381 ! Donc le probl√®me doit venir AVANT allocateRiskyBudget(). V√©rifions ce qui se passe dans generateSmartTargets() qui APPELLE allocateRiskyBudget() :
Grep "const smartAllocation = allocateRiskyBudget" (in D:\Python\crypto-rebal-starter\static\modules, glob: targets-coordinator.js)
‚éø
41 lines of output
AH ! Le probl√®me est ligne 417 ! normalizeTargets(smartAllocation) renormalise les allocations qui totalisent d√©j√† 100% ! Cela cr√©e des erreurs d'arrondi cumulatives. Le vrai bug : normalizeTargets() divise par le total puis multiplie par 100, ce qui avec des arrondis successifs peut donner des valeurs qui d√©rivent. Solution : Ne PAS normaliser si le total est d√©j√† proche de 100% :
Edit D:\Python\crypto-rebal-starter\static\modules\targets-coordinator.js
‚éø
Added 7 lines
12345678910111213
12345678910111213
API Error: 500 {"type":"error","error":{"type":"api_error","message":"Internal server error"},"request_id":null}
continue
Update Todos

Identifier pourquoi allocateRiskyBudget() retourne des valeurs diff√©rentes √† chaque appel

Ajouter logs de d√©bogage dans allocateRiskyBudget()

V√©rifier si le probl√®me vient de la normalisation ou des arrondis

Fixer le bug et tester avec plusieurs clics SMART
‚úÖ Fix appliqu√© ! J'ai modifi√© normalizeTargets() pour ne PAS renormaliser si le total est d√©j√† proche de 100% (tol√©rance 0.01%).
Ce que j'ai corrig√© :
Probl√®me identifi√© : allocateRiskyBudget() retourne des valeurs qui totalisent exactement 100%, mais normalizeTargets() les renormalise quand m√™me, cr√©ant des erreurs d'arrondi cumulatives
Solution : Ajout d'un check ligne 137 :
if (Math.abs(total - 100) < 0.01) {
  // Skip renormalization, return copy
  return { ...completeTargets };
}
Pour tester :
Red√©marre le serveur (pour recharger le module modifi√©)
Hard reload du navigateur : Ctrl+Shift+R
Clique plusieurs fois sur SMART
Tu devrais maintenant voir dans les logs :
‚úÖ Targets already normalized, skipping renormalization (total: 100)
Et les allocations doivent √™tre identiques √† chaque clic ! üéâ Si √ßa marche, je r√©activerai le cache dans market-regimes.js (ligne 229-234) et on pourra clore ce bug. Dis-moi ce que √ßa donne ! üöÄ
non, ca change √† chaque clique et toujours des allocations n√©gatives
üò§ OK, le probl√®me est plus profond. Les logs vont nous dire exactement ce qui se passe. Ouvre la console (F12) et clique 3 fois sur SMART, puis copie-moi TOUS les logs qui contiennent :
üîç allocateRiskyBudget
‚úÖ Targets already normalized ou üîÑ Normalized targets
üí∞ NO CACHE
Mais avant, ajoutons un log critique pour voir ce qui entre dans allocateRiskyBudget() :
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Edit failed
12345678
12345678910
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 325-404)
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 4 lines
12345678
123456789101112
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 3 lines
1234567
12345678910
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 2 lines
123456789
1234567891011
Update Todos

Fixer le bug et tester avec plusieurs clics SMART

Analyser les logs de debug pour identifier la source du non-determinisme
‚úÖ Logs de debug complets ajout√©s ! Maintenant red√©marre le serveur et recharge la page :
# Dans le terminal, Ctrl+C puis :
uvicorn api.main:app --reload --port 8000
Puis dans le navigateur :
Hard reload : Ctrl+Shift+R
Ouvre la console (F12)
Clique 3 fois sur SMART
Copie-moi tous les logs qui commencent par üö® [allocateRiskyBudget]
Les logs vont nous montrer exactement :
Si riskyPercentage change entre les appels
Si allocation.btc/eth sont bien initialis√©s √† 50/30 √† chaque fois
Si le bias change
Si les valeurs finales sont coh√©rentes
Ces logs vont r√©v√©ler le bug ! üîç
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 44 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: 0, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 100
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 44, BTC: '19.80', ETH: '15.40', totalRisky: '44.00', stables: '56.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 5, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '20.80', ETH: '15.20', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 44 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -20, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -5, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 80
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 44, BTC: '25.52', ETH: '18.92', totalRisky: '44.00', stables: '56.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 44 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -30, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 70
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 44, BTC: '28.60', ETH: '22.00', totalRisky: '44.00', stables: '56.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 44 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -40, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -25, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 60
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 44, BTC: '33.44', ETH: '25.52', totalRisky: '44.00', stables: '56.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -50, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -35, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 50
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '36.00', ETH: '28.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -60, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -45, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 40
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '45.60', ETH: '34.80', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -70, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -55, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 30
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '60.80', ETH: '46.40', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -80, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -65, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 20
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '90.00', ETH: '70.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -90, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -75, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 10
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '180.00', ETH: '140.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -110, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -95, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -10
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-180.00', ETH: '-140.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -120, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -105, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -20
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-90.00', ETH: '-70.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -130, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -115, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -30
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-59.60', ETH: '-46.80', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -140, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -125, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -40
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-44.40', ETH: '-35.20', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -150, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -135, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -50
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-36.00', ETH: '-28.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -160, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -145, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -60
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-29.20', ETH: '-23.60', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -170, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -155, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -70
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-25.20', ETH: '-20.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -180, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -165, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -80
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-22.00', ETH: '-17.60', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -190, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -175, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -90
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-19.60', ETH: '-15.60', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -200, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -185, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -100
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-18.00', ETH: '-14.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -210, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -195, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -110
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-16.00', ETH: '-12.80', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -220, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -205, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -120
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-14.00', ETH: '-12.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -230, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -215, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -130
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-13.60', ETH: '-10.80', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -240, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -225, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -140
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-12.40', ETH: '-10.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -250, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -235, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -150
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-11.20', ETH: '-9.60', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -260, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -245, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -160
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-10.80', ETH: '-8.80', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -270, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -255, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -170
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-10.40', ETH: '-8.40', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -280, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -265, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -180
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-9.60', ETH: '-8.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -290, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -275, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -190
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-8.80', ETH: '-7.60', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -300, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -285, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -200
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-8.40', ETH: '-7.20', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -310, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -295, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -210
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-8.00', ETH: '-6.80', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -320, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -305, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -220
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-7.60', ETH: '-6.40', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -330, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -315, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -230
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-6.80', ETH: '-6.40', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -340, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -325, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -240
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-6.80', ETH: '-6.00', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -350, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -335, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: -250
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '-7.20', ETH: '-5.60', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
üéØ TROUV√â LE BUG ! C'est √âVIDENT maintenant ! Regarde ce qui se passe :
1er clic: alts_reduction: 0    ‚Üí midcaps: 15   ‚Üí Total: 100 ‚úÖ
2√®me clic: alts_reduction: -10  ‚Üí midcaps: 5    ‚Üí Total: 90
3√®me clic: alts_reduction: -20  ‚Üí midcaps: -5   ‚Üí Total: 80  ‚ùå N√âGATIF!
4√®me clic: alts_reduction: -30  ‚Üí midcaps: -15  ‚Üí Total: 70
...
34√®me clic: alts_reduction: -330 ‚Üí midcaps: -315 ‚Üí Total: -230 üíÄ
Le probl√®me : regime.allocation_bias.alts_reduction CHANGE √Ä CHAQUE APPEL ! Il d√©cro√Æt de -10 √† chaque fois, cr√©ant des midcaps n√©gatifs qui explosent tout. La cause : Quelque part dans le code, le r√©gime MUTE son propre allocation_bias au lieu de cr√©er une copie ! Cherchons o√π le r√©gime est cr√©√©/modifi√© :
Update Todos

Bug identifi√©: regime.allocation_bias.alts_reduction change √† chaque appel

Trouver o√π le r√©gime est mut√© (probablement dans applyMarketOverrides ou applyOnChainIntelligence)

Fixer la mutation en cr√©ant une copie profonde du r√©gime

Tester SMART avec plusieurs clics pour confirmer le fix
Le r√©gime est probablement mut√© dans applyOnChainIntelligence() ligne 366 de targets-coordinator.js :
if (onchainMetadata) {
  adjustedRegime = applyOnChainIntelligence(adjustedRegime, onchainMetadata);
}
Ou dans applyMarketOverrides() ligne 363. Ces fonctions modifient probablement directement l'objet regime au lieu de cr√©er une copie. Solution rapide : Forcer une copie profonde du r√©gime AVANT de l'utiliser :
Read D:\Python\crypto-rebal-starter\static\modules\targets-coordinator.js (lines 361-375)
Edit D:\Python\crypto-rebal-starter\static\modules\targets-coordinator.js
‚éø
Added 1 line
1234567
12345678
Update Todos

Bug identifi√©: regime.allocation_bias.alts_reduction change √† chaque appel

Trouver o√π le r√©gime est mut√©

Fixer la mutation en cr√©ant une copie profonde du r√©gime

Tester SMART avec plusieurs clics pour confirmer le fix
‚úÖ FIX APPLIQU√â ! J'ai ajout√© une deep copy du r√©gime (ligne 370) avant d'appliquer les overrides.
R√©sum√© du bug
Probl√®me : getMarketRegime() retourne le m√™me objet √† chaque appel (probablement depuis un cache), et applyMarketOverrides() ou applyOnChainIntelligence() le modifient directement, cr√©ant une mutation cumulative. Solution : JSON.parse(JSON.stringify(regime)) cr√©e une copie profonde ind√©pendante.
Pour tester
Red√©marre le serveur
Hard reload : Ctrl+Shift+R
Clique 3-4 fois sur SMART
Tu devrais voir dans les logs :
üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 15, meme: 0}
Et midcaps doit rester √† 15 ou proche, PAS devenir n√©gatif ! üéâ Dis-moi si √ßa marche !
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: 0, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 100
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '21.60', ETH: '16.80', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 5, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: '20.80', ETH: '15.20', totalRisky: '40.00', stables: '60.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 5, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '24.96', ETH: '18.24', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -20, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -5, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 80
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '27.84', ETH: '20.64', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -30, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 70
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '31.20', ETH: '24.00', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -40, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -25, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 60
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '36.48', ETH: '27.84', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -50, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -35, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 50
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '43.20', ETH: '33.60', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -60, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -45, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 40
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '54.72', ETH: '41.76', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -70, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -55, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 30
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '72.96', ETH: '55.68', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -80, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -65, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 20
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '108.00', ETH: '84.00', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 48 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -90, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -75, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 10
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 48, BTC: '216.00', ETH: '168.00', totalRisky: '48.00', stables: '52.00', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}
market-regimes.js:326 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 40 regime: Euphorie bias: {btc_boost: -5, eth_boost: 5, alts_reduction: -100, stables_target: 50, meme_cap: 0}
market-regimes.js:336 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:346 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: -85, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] Total before normalization: 0
market-regimes.js:383 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 40, BTC: 'NaN', ETH: 'Infinity', totalRisky: 'NaN', stables: 'NaN', ‚Ä¶}

Il n'y aurait pas un calcul avec des mock ou des valeurs al√©atoires ?
üò± LE PROBL√àME PERSISTE ! Et pire, alts_reduction plafonne maintenant √† -100 et se r√©p√®te infiniment ! Regarde la s√©quence :
alts_reduction: 0 ‚Üí -10 ‚Üí -10 ‚Üí -20 ‚Üí -30 ‚Üí -40 ‚Üí -50 ‚Üí -60 ‚Üí -70 ‚Üí -80 ‚Üí -90 ‚Üí -100 (puis bloqu√© √† -100)
Mon deep copy n'a PAS MARCH√â car le r√©gime est TOUJOURS MUT√â ! La copie JSON ne suffit pas car quelque part dans applyMarketOverrides() ou applyOnChainIntelligence(), il y a une mutation qui persiste. Le probl√®me n'est PAS dans les valeurs al√©atoires/mock, mais dans une mutation cumulative d'un objet partag√©. Il n'y a QU'UNE solution : Trouver o√π alts_reduction est modifi√© et arr√™ter cette mutation. Cherchons dans applyOnChainIntelligence() car c'est l√† que √ßa se passe :
Grep "alts_reduction|allocation_bias" (in D:\Python\crypto-rebal-starter\static\modules, glob: targets-coordinator.js)
‚éø
1 line of output
Cherchons dans market-regimes.js :
Grep "alts_reduction.*=|\.alts_reduction\s*[-+]" (in D:\Python\crypto-rebal-starter\static\modules, glob: *.js)
‚éø
22 lines of output
üéØ BINGO ! Ligne 185 de market-regimes.js !
adjustedRegime.allocation_bias.alts_reduction -= 10; // ‚ùå MUTATION!
Cette ligne mute directement l'objet adjustedRegime ! Et comme ma deep copy est appel√©e APR√àS getMarketRegime() mais AVANT applyMarketOverrides(), l'objet ORIGINAL (retourn√© par getMarketRegime()) est mut√© et r√©utilis√© au prochain appel ! Solution : Faire la deep copy DANS applyMarketOverrides() AU D√âBUT :
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 161-175)
Read D:\Python\crypto-rebal-starter\static\modules\market-regimes.js (lines 152-161)
VOIL√Ä LE PROBL√àME ! Ligne 157 : let adjustedRegime = { ...regime }; C'est une shallow copy ! √áa copie l'objet principal mais PAS allocation_bias qui est un sous-objet ! Donc quand on fait adjustedRegime.allocation_bias.alts_reduction -= 10, √ßa mute l'objet original ! Fix : Deep copy de allocation_bias aussi :
Edit D:\Python\crypto-rebal-starter\static\modules\market-regimes.js
‚éø
Added 4 lines
123
1234567
üéâ FIX FINAL APPLIQU√â !
R√©sum√© du bug (pour de vrai cette fois)
Probl√®me : applyMarketOverrides() faisait une shallow copy avec { ...regime }, ce qui copiait l'objet principal mais partageait le sous-objet allocation_bias. Donc √† chaque appel, alts_reduction -= 10 mutait l'objet original ! Solution : Deep copy de allocation_bias √©galement.
Pour tester
Red√©marre le serveur
Hard reload : Ctrl+Shift+R
Clique 5 fois sur SMART
Tu devrais voir :
üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 45, eth: 35, midcaps: 15, meme: 0}
Et midcaps doit TOUJOURS rester √† 5 ou 15 (selon riskScore), JAMAIS devenir n√©gatif ! üéØ
Strategic tragets ne fonctionne plus du tout

debug-logger.js:25 üîß DebugLogger initialized - Debug mode: ON
debug-logger.js:113 üîç DEBUG üöÄ Debug Logger loaded - Type toggleDebug() to switch modes
debug-logger.js:180 [debug] üé® Th√®me appliqu√©: auto (effectif: dark)
debug-logger.js:180 [debug] üöÄ Configuration globale charg√©e: {data_source: 'cointracking_api', pricing: 'local', display_currency: 'USD', min_usd_threshold: 1, coingecko_api_key: '', ‚Ä¶}
risk-data-orchestrator.js:16 ‚úÖ Risk orchestrator initialized (singleton)
risk-data-orchestrator.js:32 üîÑ Starting risk store hydration...
risk-data-orchestrator.js:40 üîÑ Hard refresh detected, forcing cache refresh
debug-logger.js:180 [debug] Cache miss: market-signals, fetching...
debug-logger.js:180 [debug] üîç Fetching REAL market signals...
debug-logger.js:180 [debug] üîç Fetching on-chain indicators... {force: true}
debug-logger.js:180 [debug] üéØ Current data source: cointracking_api
debug-logger.js:180 [debug] üåê Calling fetchCryptoToolboxIndicators with SWR... {force: true}
debug-logger.js:180 [debug] üîç DEBUG getCurrentCycleMonths: {lastHalving: '2024-04-20T00:00:00.000Z', now: '2025-10-08T11:51:27.150Z', yearDiff: 1, monthDiff: 6, dayDiff: -12, ‚Ä¶}
debug-logger.js:180 [debug] üìä Risk Dashboard initialized with data source: cointracking_api
debug-logger.js:180 [debug] ‚úÖ Risk Dashboard: Unified asset groups loaded
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
flyout-layout-adapter.js:24 [FlyoutLayoutAdapter] Initializing for .wrap {offset: 20, transition: '0.3s ease'}
risk-dashboard.html:7279 Risk Dashboard CCS MVP initializing...
risk-dashboard.html:7283 üîó Risk Dashboard initialized with data source: cointracking_api
risk-dashboard.html:7073 üóÑÔ∏è Initializing persistent cache system...
risk-dashboard.html:7287 Persistent cache system initialized
risk-dashboard.html:7301 Initializing theme for risk-dashboard page...
debug-logger.js:180 [debug] üé® Th√®me appliqu√©: auto (effectif: dark)
risk-dashboard.html:7308 Current theme after risk-dashboard init: dark
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
debug-logger.js:180 [debug] State hydrated from localStorage
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
debug-logger.js:180 [debug] üîç Risk Overview using data source: cointracking_api
debug-logger.js:180 [debug] Cache miss: risk-dashboard-balance:jack:cointracking_api:1, fetching...
debug-logger.js:180 [debug] Loading CCS data...
debug-logger.js:180 [debug] Cache miss: market-signals, fetching...
debug-logger.js:180 [debug] üîç Fetching REAL market signals...
debug-logger.js:180 [debug] üîç DEBUG getCurrentCycleMonths: {lastHalving: '2024-04-20T00:00:00.000Z', now: '2025-10-08T11:51:27.867Z', yearDiff: 1, monthDiff: 6, dayDiff: -12, ‚Ä¶}
debug-logger.js:180 [debug] Loading alerts data...
risk-dashboard.html:7374 Risk Dashboard CCS MVP initialized
risk-dashboard.html:7392 üèõÔ∏è Initializing Governance Panel...
risk-dashboard.html:7402 ‚úÖ Governance Panel initialized
debug-logger.js:180 [debug] ‚úÖ Fear & Greed loaded: 60
flyout-layout-adapter.js:58 [FlyoutLayoutAdapter] Initial state from localStorage: {persistKey: 'risk_dashboard_flyout', persisted: {‚Ä¶}}
debug-logger.js:180 [debug] üîç CryptoToolbox result: {cbbi_: {‚Ä¶}, pi_cycle: {‚Ä¶}, mvrv_z_score: {‚Ä¶}, rupl_nupl: {‚Ä¶}, 2y_ma: {‚Ä¶}, ‚Ä¶}
debug-logger.js:180 [debug] ‚úÖ CBBI* loaded: 76.89% 
debug-logger.js:180 [debug] ‚úÖ Pi Cycle loaded: 54.96% 
debug-logger.js:180 [debug] ‚úÖ MVRV Z-Score loaded: 80.9% 
debug-logger.js:180 [debug] ‚úÖ RUPL/NUPL loaded: 86.01% 
debug-logger.js:180 [debug] ‚úÖ 2Y MA loaded: 91.63% 
debug-logger.js:180 [debug] ‚úÖ Trolololo Trend Line loaded: 61.09% 
debug-logger.js:180 [debug] ‚úÖ Reserve Risk loaded: 72.1% 
debug-logger.js:180 [debug] ‚úÖ Woobull loaded: 71.15% 
debug-logger.js:180 [debug] ‚úÖ BMO (par Prof. Cha√Æne) (EMA 7j) loaded: 0.342% 
debug-logger.js:180 [debug] ‚úÖ BMO (par Prof. Cha√Æne) (EMA 30j) loaded: 0.345% 
debug-logger.js:180 [debug] ‚úÖ BMO (par Prof. Cha√Æne) (EMA 90j) loaded: 0.31% 
debug-logger.js:180 [debug] ‚úÖ NUPL loaded: 57.71% 
debug-logger.js:180 [debug] ‚úÖ Cointime MVRV-Z Score (EMA 14j) loaded: 2.824% 
debug-logger.js:180 [debug] ‚úÖ SOPR (MA 90j) loaded: 1.075% 
debug-logger.js:180 [debug] ‚úÖ Coin Days Destroyed (MA 90j) loaded: 19417114% 
debug-logger.js:180 [debug] ‚úÖ Mayer Mutiple loaded: 1.4% 
debug-logger.js:180 [debug] ‚úÖ RSI Mensuel loaded: 73.74% 
debug-logger.js:180 [debug] ‚úÖ Fear & Greed (moyenne 7 jours) loaded: 67.57% 
debug-logger.js:180 [debug] ‚úÖ Dominance BTC loaded: 59.12% 
debug-logger.js:180 [debug] ‚úÖ Altcoin Season Index loaded: 63% 
debug-logger.js:180 [debug] ‚úÖ Binance App Rank (FR) loaded: 100% 
debug-logger.js:180 [debug] ‚úÖ Binance App Rank (UK) loaded: 100% 
debug-logger.js:180 [debug] ‚úÖ Crypto.com App Rank (US) loaded: 100% 
debug-logger.js:180 [debug] ‚úÖ Phantom App Rank (US) loaded: 100% 
debug-logger.js:180 [debug] ‚úÖ Google trend "Crypto" loaded: 35% 
debug-logger.js:180 [debug] ‚úÖ Google trend "Buy crypto" loaded: 22% 
debug-logger.js:180 [debug] ‚úÖ Google trend "Bitcoin" loaded: 24% 
debug-logger.js:180 [debug] ‚úÖ Google trend "Ethereum" loaded: 19% 
debug-logger.js:180 [debug] ‚úÖ Nombre de connect√©s JVC loaded: 65% 
debug-logger.js:180 [debug] ‚úÖ Jours depuis halving loaded: 538% üö®
debug-logger.js:180 [debug] ‚úÖ Total 30 indicators loaded from Crypto-Toolbox
debug-logger.js:180 [debug] ‚úÖ Real indicators loaded: 30 total indicators
debug-logger.js:180 [debug] üìä Indicators by source: {crypto-toolbox: 30}
debug-logger.js:180 [debug] üîß Dev mode detected - Admin role forced
risk-dashboard.html:1 Access to fetch at 'https://api.coingecko.com/api/v3/global' from origin 'http://localhost:8000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
debug-logger.js:200  GET https://api.coingecko.com/api/v3/global net::ERR_FAILED 429 (Too Many Requests)
(anonymous) @ debug-logger.js:200
fetchSignals @ signals-engine.js:60
await in fetchSignals
(anonymous) @ signals-engine.js:353
retryFetch @ fetcher.js:90
fetchCached @ fetcher.js:52
fetchAndComputeCCS @ signals-engine.js:351
hydrateRiskStore @ risk-data-orchestrator.js:114
autoInit @ risk-data-orchestrator.js:336
(anonymous) @ risk-data-orchestrator.js:351
debug-logger.js:96 ‚ö†Ô∏è ‚ö†Ô∏è BTC Dominance fallback: TypeError: Failed to fetch
    at debug-logger.js:200:40
    at fetchSignals (signals-engine.js:60:39)
warn @ debug-logger.js:96
fetchSignals @ signals-engine.js:79
await in fetchSignals
(anonymous) @ signals-engine.js:353
retryFetch @ fetcher.js:90
fetchCached @ fetcher.js:52
fetchAndComputeCCS @ signals-engine.js:351
hydrateRiskStore @ risk-data-orchestrator.js:114
autoInit @ risk-data-orchestrator.js:336
(anonymous) @ risk-data-orchestrator.js:351
debug-logger.js:180 [debug] Alerts loaded: 0 active alerts
debug-logger.js:180 [debug] ‚úÖ Fear & Greed loaded: 60
risk-dashboard.html:1 Access to fetch at 'https://api.coingecko.com/api/v3/global' from origin 'http://localhost:8000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
debug-logger.js:200  GET https://api.coingecko.com/api/v3/global net::ERR_FAILED 429 (Too Many Requests)
(anonymous) @ debug-logger.js:200
fetchSignals @ signals-engine.js:60
await in fetchSignals
(anonymous) @ signals-engine.js:353
retryFetch @ fetcher.js:90
fetchCached @ fetcher.js:52
fetchAndComputeCCS @ signals-engine.js:351
loadCCSData @ risk-dashboard.html:2730
refreshDashboard @ risk-dashboard.html:3801
(anonymous) @ risk-dashboard.html:7319
debug-logger.js:96 ‚ö†Ô∏è ‚ö†Ô∏è BTC Dominance fallback: TypeError: Failed to fetch
    at debug-logger.js:200:40
    at fetchSignals (signals-engine.js:60:39)
warn @ debug-logger.js:96
fetchSignals @ signals-engine.js:79
await in fetchSignals
(anonymous) @ signals-engine.js:353
retryFetch @ fetcher.js:90
fetchCached @ fetcher.js:52
fetchAndComputeCCS @ signals-engine.js:351
loadCCSData @ risk-dashboard.html:2730
refreshDashboard @ risk-dashboard.html:3801
(anonymous) @ risk-dashboard.html:7319
debug-logger.js:180 [debug] WebSocket connection opened for navigation badge
debug-logger.js:180 [debug] ‚úÖ Funding Rate loaded: 0.0100%
debug-logger.js:180 [debug] üîç ETH/BTC API response: {bitcoin: {‚Ä¶}, ethereum: {‚Ä¶}}
debug-logger.js:180 [debug] ‚úÖ ETH/BTC Ratio loaded: 0.036554
debug-logger.js:180 [debug] ‚úÖ Volatility loaded: 27.9%
debug-logger.js:180 [debug] ‚úÖ Trend loaded: 5.64%
debug-logger.js:180 [debug] üîç Fetched REAL signals: {fear_greed: {‚Ä¶}, btc_dominance: {‚Ä¶}, funding_rate: {‚Ä¶}, eth_btc_ratio: {‚Ä¶}, volatility: {‚Ä¶}, ‚Ä¶}
debug-logger.js:180 [debug] CCS computed: 52.58 (model: ccs-1)
risk-dashboard.html:7324 üèõÔ∏è Initializing governance system...
debug-logger.js:180 [debug] ‚úÖ Funding Rate loaded: 0.0100%
debug-logger.js:180 [debug] üîç ETH/BTC API response: {bitcoin: {‚Ä¶}, ethereum: {‚Ä¶}}
debug-logger.js:180 [debug] ‚úÖ ETH/BTC Ratio loaded: 0.036554
debug-logger.js:180 [debug] ‚úÖ Volatility loaded: 27.9%
debug-logger.js:180 [debug] ‚úÖ Trend loaded: 5.64%
debug-logger.js:180 [debug] üîç Fetched REAL signals: {fear_greed: {‚Ä¶}, btc_dominance: {‚Ä¶}, funding_rate: {‚Ä¶}, eth_btc_ratio: {‚Ä¶}, volatility: {‚Ä¶}, ‚Ä¶}
debug-logger.js:180 [debug] CCS computed: 52.58 (model: ccs-1)
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
debug-logger.js:180 [debug] CCS loaded: 52.58, Cycle: bull_build (18m)
debug-logger.js:180 [debug] üîç Raw API response (Shadow Mode V2): {"sharpe_legacy":1.591402132435108,"var95":-0.016049864895839552,"risk_score_legacy":90,"structural_legacy":52,"window_used":{"price_history_days":365,"lookback_days":90,"actual_data_points":71,"dual_window_enabled":true,"risk_score_source":"full_intersection"},"risk_version_info":{"active_version":"legacy","risk_score_v2":90,"sharpe_v2":1.591402132435108,"portfolio_structure_score":82.62981729743164,"integrated_structural_legacy":52}}
risk-dashboard.html:2432 üß™ SHADOW V2 - Risk metrics from API: VaR 95%: -1.60%, Sharpe: 1.59, Risk Score: 90 (authoritative), Structural: 52, Window: 71 pts, risk_version_info: PRESENT ‚úÖ
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
debug-logger.js:180 [debug] WealthContextBar: Account sources loaded, restored to "api:cointracking_api"
debug-logger.js:180 [debug] WealthContextBar: Account changed to "api:cointracking_api" (skipSave=true)
debug-logger.js:180 [debug] User switcher initialized, current user: jack
debug-logger.js:180 [debug] WealthContextBar: Source changed from csv/null to cointracking_api/null
debug-logger.js:180 [debug] Configuration sauvegard√©e
debug-logger.js:180 [debug] WealthContextBar: Emitting dataSourceChanged event (csv ‚Üí cointracking_api)
debug-logger.js:180 [debug] üîÑ Explicit data source change: csv ‚Üí cointracking_api
risk-dashboard.html:7180 üßπ All persistent cache cleared for source cointracking_api
risk-dashboard.html:7291 üîÑ Data source changed, clearing cache and reloading... {oldSource: 'csv', newSource: 'cointracking_api', oldFile: null, newFile: null}
debug-logger.js:180 [debug] All caches cleared
risk-dashboard.html:7294 Uncaught ReferenceError: loadDashboard is not defined
    at risk-dashboard.html:7294:20
    at WealthContextBar.handleAccountChange (WealthContextBar.js:385:14)
    at async WealthContextBar.loadAndPopulateAccountSources (WealthContextBar.js:690:7)
(anonymous) @ risk-dashboard.html:7294
handleAccountChange @ WealthContextBar.js:385
await in handleAccountChange
loadAndPopulateAccountSources @ WealthContextBar.js:690
await in loadAndPopulateAccountSources
render @ WealthContextBar.js:647
initWealthContextBar @ WealthContextBar.js:981
(anonymous) @ WealthContextBar.js:987
risk-sidebar-full.js:177 [risk-sidebar-full] Store not hydrated yet, waiting...
debug-logger.js:180 [debug] üîÑ Waiting for orchestrator hydration...
debug-logger.js:180 [debug] ‚úÖ Risk score from backend API: 90
debug-logger.js:180 [debug] üîç Analyzing correlations for category "onchain_pure" with 6 indicators
debug-logger.js:180 [debug]   üìä MVRV Z-Score: correlationGroup = valuation
debug-logger.js:180 [debug]   üìä RUPL/NUPL: correlationGroup = valuation
debug-logger.js:180 [debug]   üìä NUPL: correlationGroup = valuation
debug-logger.js:180 [debug]   üìä Cointime MVRV-Z Score (EMA 14j): correlationGroup = valuation
debug-logger.js:180 [debug]   üìä SOPR (MA 90j): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Coin Days Destroyed (MA 90j): correlationGroup = undefined
debug-logger.js:180 [debug] üîó Found correlation groups: ['valuation']
debug-logger.js:180 [debug] üîó Correlation group "valuation": 4 indicators, dominant: MVRV Z-Score
debug-logger.js:180 [debug] üîç Analyzing correlations for category "cycle_technical" with 8 indicators
debug-logger.js:180 [debug]   üìä CBBI*: correlationGroup = cycle_timing
debug-logger.js:180 [debug]   üìä Pi Cycle: correlationGroup = cycle_timing
debug-logger.js:180 [debug]   üìä 2Y MA: correlationGroup = moving_averages
debug-logger.js:180 [debug]   üìä Trolololo Trend Line: correlationGroup = trend_lines
debug-logger.js:180 [debug]   üìä Reserve Risk: correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Woobull: correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Mayer Mutiple: correlationGroup = undefined
debug-logger.js:180 [debug]   üìä RSI Mensuel: correlationGroup = undefined
debug-logger.js:180 [debug] üîó Found correlation groups: (3) ['cycle_timing', 'moving_averages', 'trend_lines']
debug-logger.js:180 [debug] üîó Correlation group "cycle_timing": 2 indicators, dominant: Pi Cycle
debug-logger.js:180 [debug] üîç Analyzing correlations for category "sentiment_social" with 6 indicators
debug-logger.js:180 [debug]   üìä Fear & Greed (moyenne 7 jours): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Dominance BTC: correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Google trend "Crypto": correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Google trend "Buy crypto": correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Google trend "Bitcoin": correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Google trend "Ethereum": correlationGroup = undefined
debug-logger.js:180 [debug] üîó Found correlation groups: []
debug-logger.js:180 [debug] üîç Analyzing correlations for category "market_context" with 10 indicators
debug-logger.js:180 [debug]   üìä BMO (par Prof. Cha√Æne) (EMA 7j): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä BMO (par Prof. Cha√Æne) (EMA 30j): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä BMO (par Prof. Cha√Æne) (EMA 90j): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Altcoin Season Index: correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Binance App Rank (FR): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Binance App Rank (UK): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Crypto.com App Rank (US): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Phantom App Rank (US): correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Nombre de connect√©s JVC: correlationGroup = undefined
debug-logger.js:180 [debug]   üìä Jours depuis halving: correlationGroup = undefined
debug-logger.js:180 [debug] üîó Found correlation groups: []
debug-logger.js:180 [debug] ü§ñ Dynamic weighting applied: Early Expansion phase
debug-logger.js:180 [debug] üí∞ NO CACHE - Calculating fresh Risk Budget
debug-logger.js:180 [debug] ‚ö†Ô∏è LEGACY MODE: Using inverted risk semantics (will be deprecated)
debug-logger.js:180 [debug] üîç ARRONDI DEBUG: {riskyAllocation: 0.31777777777777777, stablesAllocation: 0.6822222222222223, riskyRaw: 31.77777777777778, stablesRaw: 68.22222222222223, riskyPct: 32, ‚Ä¶}
market-regimes.js:330 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 32 regime: Expansion bias: {btc_boost: 0, eth_boost: 0, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:340 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 50, eth: 30, midcaps: 5, meme: 5}
market-regimes.js:354 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:387 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 32, BTC: '18.24', ETH: '10.56', totalRisky: '32.00', stables: '68.00', ‚Ä¶}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-sidebar-full.js:192 [risk-sidebar-full] Hydration complete, updating...
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:3549 ‚úÖ Store hydrated by orchestrator, source: undefined
risk-data-orchestrator.js:302 ‚úÖ Risk store hydrated successfully in 3480ms {ccs: '52.58 (Neutral+)', cycle: 'bull_build (18mo)', onchain: '33.0', blended: '61.0', risk: '90.0', ‚Ä¶}
debug-logger.js:180 [debug] üìä Scores loaded from orchestrator: {onchain: 33, risk: 90, blended: 61, ccs: 52.58, ccsMixte: 66.8, ‚Ä¶}
risk-dashboard.html:7271 üìä Score displays updated from cache
debug-logger.js:180 [debug] üí∞ NO CACHE - Calculating fresh Risk Budget
debug-logger.js:180 [debug] ‚ö†Ô∏è LEGACY MODE: Using inverted risk semantics (will be deprecated)
debug-logger.js:180 [debug] üîç ARRONDI DEBUG: {riskyAllocation: 0.31777777777777777, stablesAllocation: 0.6822222222222223, riskyRaw: 31.77777777777778, stablesRaw: 68.22222222222223, riskyPct: 32, ‚Ä¶}
market-regimes.js:330 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 32 regime: Expansion bias: {btc_boost: 0, eth_boost: 0, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:340 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 50, eth: 30, midcaps: 5, meme: 5}
market-regimes.js:354 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:387 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 32, BTC: '18.24', ETH: '10.56', totalRisky: '32.00', stables: '68.00', ‚Ä¶}
debug-logger.js:180 [debug] üìä Market Regime calculated: {name: 'Expansion', emoji: 'üü¢', range: Array(2), color: '#10b981', description: "Phase d'expansion - March√© haussier mod√©r√©", ‚Ä¶}
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
risk-dashboard.html:2806 Alerts display elements not found
updateAlertsDisplay @ risk-dashboard.html:2806
refreshDashboard @ risk-dashboard.html:3843
await in refreshDashboard
(anonymous) @ risk-dashboard.html:7319
debug-logger.js:180 [debug] üîÑ Cycle cache miss - no cached content
debug-logger.js:180 [debug] üîÑ Rendering fresh cycle content
risk-dashboard.html:7122 üíæ Cached CYCLE_CONTENT data for source cointracking_api (TTL: 12h)
debug-logger.js:180 [debug] üíæ Cycle content cached
debug-logger.js:180 [debug] üîÑ Cycles content updated with latest data
risk-dashboard.html:3851 Risk dashboard refreshed successfully
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:180 [debug] WealthContextBar: Settings persisted successfully
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:180 [debug] Governance state synced: IDLE
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:180 [debug] Governance state synced: IDLE
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:180 [debug] ML signals synced, contradiction index: 0.475
risk-dashboard.html:7327 ‚úÖ Governance system initialized
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:180 [debug] ML signals synced, contradiction index: 0.475
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:89 ‚ùå ‚ùå Element not intersecting yet
error @ debug-logger.js:89
(anonymous) @ lazy-loader.js:46
(anonymous) @ lazy-loader.js:40
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] üîÑ Normalized targets (total was 108.41500000000002 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 99.99999999999999 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906608
debug-logger.js:180 [debug] üîÑ Normalized targets (total was 104.2075 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 36.94551735719598
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 36.94551735719598
debug-logger.js:180 [debug] üß† Generating SMART targets with scores: {blendedScore: 61, onchainScore: 33, riskScore: 90, criticalCount: undefined}
debug-logger.js:180 [debug] üí∞ NO CACHE - Calculating fresh Risk Budget
debug-logger.js:180 [debug] ‚ö†Ô∏è LEGACY MODE: Using inverted risk semantics (will be deprecated)
debug-logger.js:180 [debug] üîç ARRONDI DEBUG: {riskyAllocation: 0.31777777777777777, stablesAllocation: 0.6822222222222223, riskyRaw: 31.77777777777778, stablesRaw: 68.22222222222223, riskyPct: 32, ‚Ä¶}
market-regimes.js:330 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 32 regime: Expansion bias: {btc_boost: 0, eth_boost: 0, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:340 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 50, eth: 30, midcaps: 5, meme: 5}
market-regimes.js:354 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:387 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 32, BTC: '18.24', ETH: '10.56', totalRisky: '32.00', stables: '68.00', ‚Ä¶}
debug-logger.js:180 [debug] üß† Smart allocation calculated: {BTC: 18.240000000000002, ETH: 10.56, SOL: 0.32000000000000006, L1/L0 majors: 0.6400000000000001, L2/Scaling: 0.48, ‚Ä¶}
debug-logger.js:180 [debug] üìä Risk budget: {risky: 32, stables: 68}
debug-logger.js:180 [debug] üéØ Regime: Expansion
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 18.240000000000002
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 18.240000000000002
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6679999999999999, timestamp: '2025-10-08T11:51:31.837Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
debug-logger.js:180 [debug] üîç Loading balance data using source: cointracking_api (user: jack, cache-bust: none)
debug-logger.js:180 [debug] üì° Using CoinTracking API source
risk-sidebar-full.js:181 [risk-sidebar-full] Store hydrated, source: risk-data-orchestrator
risk-sidebar-full.js:219 [risk-sidebar-full] CCS score check: {ccsStar: 66.8, ccsScore: 52.58, final: 66.8, cycle: {‚Ä¶}, ccs: {‚Ä¶}}
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 35
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 35
debug-logger.js:180 [debug] üîÑ Normalized targets (total was 108.41500000000002 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 38.74002674906608
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 99.99999999999999 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 38.74002674906608
debug-logger.js:180 [debug] üîÑ Normalized targets (total was 104.2075 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 36.94551735719598
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 36.94551735719598
debug-logger.js:180 [debug] üß† Generating SMART targets with scores: {blendedScore: 61, onchainScore: 33, riskScore: 90, criticalCount: undefined}
debug-logger.js:180 [debug] üí∞ NO CACHE - Calculating fresh Risk Budget
debug-logger.js:180 [debug] ‚ö†Ô∏è LEGACY MODE: Using inverted risk semantics (will be deprecated)
debug-logger.js:180 [debug] üîç ARRONDI DEBUG: {riskyAllocation: 0.31777777777777777, stablesAllocation: 0.6822222222222223, riskyRaw: 31.77777777777778, stablesRaw: 68.22222222222223, riskyPct: 32, ‚Ä¶}
market-regimes.js:330 üö® [allocateRiskyBudget] CALLED - riskyPercentage: 32 regime: Expansion bias: {btc_boost: 0, eth_boost: 0, alts_reduction: -10, stables_target: 50, meme_cap: 0}
market-regimes.js:340 üö® [allocateRiskyBudget] BEFORE bias - allocation: {btc: 50, eth: 30, midcaps: 15, meme: 5}
market-regimes.js:350 üö® [allocateRiskyBudget] AFTER bias - allocation: {btc: 50, eth: 30, midcaps: 5, meme: 5}
market-regimes.js:354 üö® [allocateRiskyBudget] Total before normalization: 90
market-regimes.js:387 üö® [allocateRiskyBudget] FINAL RESULT: {riskyPercentage: 32, BTC: '18.24', ETH: '10.56', totalRisky: '32.00', stables: '68.00', ‚Ä¶}
debug-logger.js:180 [debug] üß† Smart allocation calculated: {BTC: 18.240000000000002, ETH: 10.56, SOL: 0.32000000000000006, L1/L0 majors: 0.6400000000000001, L2/Scaling: 0.48, ‚Ä¶}
debug-logger.js:180 [debug] üìä Risk budget: {risky: 32, stables: 68}
debug-logger.js:180 [debug] üéØ Regime: Expansion
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - before normalization BTC: 18.240000000000002
debug-logger.js:180 [debug] ‚úÖ Targets already normalized, skipping renormalization (total: 100 )
debug-logger.js:180 [debug] üîç DEBUG proposeTargets - after normalization BTC: 18.240000000000002
risk-dashboard.html:5973 üîç DEBUG renderTargetsContent - updatedState.scores.blended: 61
risk-dashboard.html:5974 üîç DEBUG renderTargetsContent - blendedProposal for DISPLAY: {targets: {‚Ä¶}, strategy: 'Conservative: Blended (61)', mode: 'blend', confidence: 0.6679999999999999, timestamp: '2025-10-08T11:51:31.839Z'}
risk-dashboard.html:5975 üîç DEBUG renderTargetsContent - blendedProposal.strategy: Conservative: Blended (61)
risk-dashboard.html:5976 üîç DEBUG renderTargetsContent - BTC allocation for DISPLAY: 36.94551735719598
risk-dashboard.html:5880 üîç Loading portfolio allocation using configured source...
debug-logger.js:180 [debug] üîç Loading balance data using source: cointracking_api (user: jack, cache-bust: none)
debug-logger.js:180 [debug] üì° Using CoinTracking API source
debug-logger.js:180 [debug] Switched to tab: targets
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 459‚ÄØ664,24 $US
risk-dashboard.html:6317 Failed to render targets on store change: TypeError: Cannot read properties of null (reading 'toFixed')
    at risk-dashboard.html:6066:57
    at Array.map (<anonymous>)
    at renderTargetsTable (risk-dashboard.html:6063:12)
    at renderTargetsContent (risk-dashboard.html:6022:15)
(anonymous) @ risk-dashboard.html:6317
Promise.catch
(anonymous) @ risk-dashboard.html:6317
(anonymous) @ risk-dashboard-store.js:25
setState @ risk-dashboard-store.js:25
set @ risk-dashboard-store.js:122
window.switchTab @ risk-dashboard.html:2298
onclick @ risk-dashboard.html:1999
risk-dashboard.html:5916 üîç DEBUG getCurrentPortfolioAllocation: Using real CSV data - 192 assets, total: 459‚ÄØ664,24 $US
risk-dashboard.html:2310 Failed to render targets: TypeError: Cannot read properties of null (reading 'toFixed')
    at risk-dashboard.html:6066:57
    at Array.map (<anonymous>)
    at renderTargetsTable (risk-dashboard.html:6063:12)
    at renderTargetsContent (risk-dashboard.html:6022:15)
(anonymous) @ risk-dashboard.html:2310
Promise.catch
window.switchTab @ risk-dashboard.html:2310
onclick @ risk-dashboard.html:1999
üö® NOUVEAU BUG ! Il y a une erreur JavaScript dans le rendering :
TypeError: Cannot read properties of null (reading 'toFixed')
at risk-dashboard.html:6066:57
Le probl√®me : dans renderTargetsTable(), une valeur d'allocation est null au lieu d'un nombre, et on essaie d'appeler .toFixed() dessus. Cela vient probablement d'un groupe d'assets avec une allocation null ou undefined apr√®s nos modifications.
Update Todos

Fix renderTargetsTable crash: null allocation values
Ajoutons une v√©rification null dans renderTargetsTable() :
Read D:\Python\crypto-rebal-starter\static\risk-dashboard.html (lines 6061-6075)
Edit D:\Python\crypto-rebal-starter\static\risk-dashboard.html
‚éø
Added 1 line
12345678910
1234567891011
Prompt is too long
/compact
